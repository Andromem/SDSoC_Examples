// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mean_value_accel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mean_value_accel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mean_value_accel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<30> mean_value_accel::ap_ST_fsm_state1 = "1";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state2 = "10";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state3 = "100";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state4 = "1000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state5 = "10000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state6 = "100000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state7 = "1000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_pp0_stage0 = "10000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state11 = "100000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state12 = "1000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state13 = "10000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state14 = "100000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state15 = "1000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state16 = "10000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state17 = "100000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state18 = "1000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state19 = "10000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state20 = "100000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state21 = "1000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state22 = "10000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state23 = "100000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state24 = "1000000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state25 = "10000000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state26 = "100000000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_pp1_stage0 = "1000000000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state30 = "10000000000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state31 = "100000000000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state32 = "1000000000000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state33 = "10000000000000000000000000000";
const sc_lv<30> mean_value_accel::ap_ST_fsm_state34 = "100000000000000000000000000000";
const sc_lv<32> mean_value_accel::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool mean_value_accel::ap_const_boolean_1 = true;
const sc_lv<32> mean_value_accel::ap_const_lv32_7 = "111";
const bool mean_value_accel::ap_const_boolean_0 = false;
const sc_lv<1> mean_value_accel::ap_const_lv1_1 = "1";
const sc_lv<32> mean_value_accel::ap_const_lv32_17 = "10111";
const sc_lv<32> mean_value_accel::ap_const_lv32_1D = "11101";
const int mean_value_accel::C_M_AXI_IN_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int mean_value_accel::C_M_AXI_IN_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int mean_value_accel::C_M_AXI_IN_R_CACHE_VALUE = "11";
const int mean_value_accel::C_M_AXI_DATA_WIDTH = "100000";
const int mean_value_accel::C_M_AXI_OUT_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int mean_value_accel::C_M_AXI_OUT_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int mean_value_accel::C_M_AXI_OUT_R_CACHE_VALUE = "11";
const sc_lv<32> mean_value_accel::ap_const_lv32_A = "1010";
const sc_lv<32> mean_value_accel::ap_const_lv32_18 = "11000";
const sc_lv<32> mean_value_accel::ap_const_lv32_11 = "10001";
const sc_lv<32> mean_value_accel::ap_const_lv32_15 = "10101";
const sc_lv<32> mean_value_accel::ap_const_lv32_6 = "110";
const sc_lv<32> mean_value_accel::ap_const_lv32_8 = "1000";
const sc_lv<32> mean_value_accel::ap_const_lv32_9 = "1001";
const sc_lv<1> mean_value_accel::ap_const_lv1_0 = "0";
const sc_lv<32> mean_value_accel::ap_const_lv32_B = "1011";
const sc_lv<32> mean_value_accel::ap_const_lv32_C = "1100";
const sc_lv<32> mean_value_accel::ap_const_lv32_D = "1101";
const sc_lv<32> mean_value_accel::ap_const_lv32_E = "1110";
const sc_lv<32> mean_value_accel::ap_const_lv32_F = "1111";
const sc_lv<32> mean_value_accel::ap_const_lv32_12 = "10010";
const sc_lv<32> mean_value_accel::ap_const_lv32_14 = "10100";
const sc_lv<32> mean_value_accel::ap_const_lv32_16 = "10110";
const sc_lv<31> mean_value_accel::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> mean_value_accel::ap_const_lv32_10 = "10000";
const sc_lv<31> mean_value_accel::ap_const_lv31_1 = "1";
const sc_lv<32> mean_value_accel::ap_const_lv32_1 = "1";
const sc_lv<32> mean_value_accel::ap_const_lv32_400 = "10000000000";
const sc_lv<32> mean_value_accel::ap_const_lv32_13 = "10011";
const sc_lv<3> mean_value_accel::ap_const_lv3_0 = "000";
const sc_lv<2> mean_value_accel::ap_const_lv2_0 = "00";
const sc_lv<4> mean_value_accel::ap_const_lv4_0 = "0000";
const sc_lv<4> mean_value_accel::ap_const_lv4_F = "1111";
const sc_lv<32> mean_value_accel::ap_const_lv32_1F = "11111";
const sc_lv<32> mean_value_accel::ap_const_lv32_2 = "10";
const sc_lv<32> mean_value_accel::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<13> mean_value_accel::ap_const_lv13_1FFF = "1111111111111";
const sc_lv<65> mean_value_accel::ap_const_lv65_155555556 = "101010101010101010101010101010110";
const sc_lv<32> mean_value_accel::ap_const_lv32_22 = "100010";
const sc_lv<32> mean_value_accel::ap_const_lv32_40 = "1000000";
const sc_lv<65> mean_value_accel::ap_const_lv65_0 = "00000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<13> mean_value_accel::ap_const_lv13_400 = "10000000000";
const sc_lv<13> mean_value_accel::ap_const_lv13_1FFE = "1111111111110";
const sc_lv<13> mean_value_accel::ap_const_lv13_3FF = "1111111111";

mean_value_accel::mean_value_accel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mean_value_accel_in_r_m_axi_U = new mean_value_accel_in_r_m_axi<32,32,5,16,16,16,16,C_M_AXI_IN_R_ID_WIDTH,C_M_AXI_IN_R_ADDR_WIDTH,C_M_AXI_IN_R_DATA_WIDTH,C_M_AXI_IN_R_AWUSER_WIDTH,C_M_AXI_IN_R_ARUSER_WIDTH,C_M_AXI_IN_R_WUSER_WIDTH,C_M_AXI_IN_R_RUSER_WIDTH,C_M_AXI_IN_R_BUSER_WIDTH,C_M_AXI_IN_R_USER_VALUE,C_M_AXI_IN_R_PROT_VALUE,C_M_AXI_IN_R_CACHE_VALUE>("mean_value_accel_in_r_m_axi_U");
    mean_value_accel_in_r_m_axi_U->AWVALID(m_axi_in_r_AWVALID);
    mean_value_accel_in_r_m_axi_U->AWREADY(m_axi_in_r_AWREADY);
    mean_value_accel_in_r_m_axi_U->AWADDR(m_axi_in_r_AWADDR);
    mean_value_accel_in_r_m_axi_U->AWID(m_axi_in_r_AWID);
    mean_value_accel_in_r_m_axi_U->AWLEN(m_axi_in_r_AWLEN);
    mean_value_accel_in_r_m_axi_U->AWSIZE(m_axi_in_r_AWSIZE);
    mean_value_accel_in_r_m_axi_U->AWBURST(m_axi_in_r_AWBURST);
    mean_value_accel_in_r_m_axi_U->AWLOCK(m_axi_in_r_AWLOCK);
    mean_value_accel_in_r_m_axi_U->AWCACHE(m_axi_in_r_AWCACHE);
    mean_value_accel_in_r_m_axi_U->AWPROT(m_axi_in_r_AWPROT);
    mean_value_accel_in_r_m_axi_U->AWQOS(m_axi_in_r_AWQOS);
    mean_value_accel_in_r_m_axi_U->AWREGION(m_axi_in_r_AWREGION);
    mean_value_accel_in_r_m_axi_U->AWUSER(m_axi_in_r_AWUSER);
    mean_value_accel_in_r_m_axi_U->WVALID(m_axi_in_r_WVALID);
    mean_value_accel_in_r_m_axi_U->WREADY(m_axi_in_r_WREADY);
    mean_value_accel_in_r_m_axi_U->WDATA(m_axi_in_r_WDATA);
    mean_value_accel_in_r_m_axi_U->WSTRB(m_axi_in_r_WSTRB);
    mean_value_accel_in_r_m_axi_U->WLAST(m_axi_in_r_WLAST);
    mean_value_accel_in_r_m_axi_U->WID(m_axi_in_r_WID);
    mean_value_accel_in_r_m_axi_U->WUSER(m_axi_in_r_WUSER);
    mean_value_accel_in_r_m_axi_U->ARVALID(m_axi_in_r_ARVALID);
    mean_value_accel_in_r_m_axi_U->ARREADY(m_axi_in_r_ARREADY);
    mean_value_accel_in_r_m_axi_U->ARADDR(m_axi_in_r_ARADDR);
    mean_value_accel_in_r_m_axi_U->ARID(m_axi_in_r_ARID);
    mean_value_accel_in_r_m_axi_U->ARLEN(m_axi_in_r_ARLEN);
    mean_value_accel_in_r_m_axi_U->ARSIZE(m_axi_in_r_ARSIZE);
    mean_value_accel_in_r_m_axi_U->ARBURST(m_axi_in_r_ARBURST);
    mean_value_accel_in_r_m_axi_U->ARLOCK(m_axi_in_r_ARLOCK);
    mean_value_accel_in_r_m_axi_U->ARCACHE(m_axi_in_r_ARCACHE);
    mean_value_accel_in_r_m_axi_U->ARPROT(m_axi_in_r_ARPROT);
    mean_value_accel_in_r_m_axi_U->ARQOS(m_axi_in_r_ARQOS);
    mean_value_accel_in_r_m_axi_U->ARREGION(m_axi_in_r_ARREGION);
    mean_value_accel_in_r_m_axi_U->ARUSER(m_axi_in_r_ARUSER);
    mean_value_accel_in_r_m_axi_U->RVALID(m_axi_in_r_RVALID);
    mean_value_accel_in_r_m_axi_U->RREADY(m_axi_in_r_RREADY);
    mean_value_accel_in_r_m_axi_U->RDATA(m_axi_in_r_RDATA);
    mean_value_accel_in_r_m_axi_U->RLAST(m_axi_in_r_RLAST);
    mean_value_accel_in_r_m_axi_U->RID(m_axi_in_r_RID);
    mean_value_accel_in_r_m_axi_U->RUSER(m_axi_in_r_RUSER);
    mean_value_accel_in_r_m_axi_U->RRESP(m_axi_in_r_RRESP);
    mean_value_accel_in_r_m_axi_U->BVALID(m_axi_in_r_BVALID);
    mean_value_accel_in_r_m_axi_U->BREADY(m_axi_in_r_BREADY);
    mean_value_accel_in_r_m_axi_U->BRESP(m_axi_in_r_BRESP);
    mean_value_accel_in_r_m_axi_U->BID(m_axi_in_r_BID);
    mean_value_accel_in_r_m_axi_U->BUSER(m_axi_in_r_BUSER);
    mean_value_accel_in_r_m_axi_U->ACLK(ap_clk);
    mean_value_accel_in_r_m_axi_U->ARESET(ap_rst_n_inv);
    mean_value_accel_in_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    mean_value_accel_in_r_m_axi_U->I_ARVALID(in_r_ARVALID);
    mean_value_accel_in_r_m_axi_U->I_ARREADY(in_r_ARREADY);
    mean_value_accel_in_r_m_axi_U->I_ARADDR(tmp_18_fu_343_p1);
    mean_value_accel_in_r_m_axi_U->I_ARID(ap_var_for_const1);
    mean_value_accel_in_r_m_axi_U->I_ARLEN(size);
    mean_value_accel_in_r_m_axi_U->I_ARSIZE(ap_var_for_const2);
    mean_value_accel_in_r_m_axi_U->I_ARLOCK(ap_var_for_const3);
    mean_value_accel_in_r_m_axi_U->I_ARCACHE(ap_var_for_const4);
    mean_value_accel_in_r_m_axi_U->I_ARQOS(ap_var_for_const4);
    mean_value_accel_in_r_m_axi_U->I_ARPROT(ap_var_for_const2);
    mean_value_accel_in_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    mean_value_accel_in_r_m_axi_U->I_ARBURST(ap_var_for_const3);
    mean_value_accel_in_r_m_axi_U->I_ARREGION(ap_var_for_const4);
    mean_value_accel_in_r_m_axi_U->I_RVALID(in_r_RVALID);
    mean_value_accel_in_r_m_axi_U->I_RREADY(in_r_RREADY);
    mean_value_accel_in_r_m_axi_U->I_RDATA(in_r_RDATA);
    mean_value_accel_in_r_m_axi_U->I_RID(in_r_RID);
    mean_value_accel_in_r_m_axi_U->I_RUSER(in_r_RUSER);
    mean_value_accel_in_r_m_axi_U->I_RRESP(in_r_RRESP);
    mean_value_accel_in_r_m_axi_U->I_RLAST(in_r_RLAST);
    mean_value_accel_in_r_m_axi_U->I_AWVALID(ap_var_for_const5);
    mean_value_accel_in_r_m_axi_U->I_AWREADY(in_r_AWREADY);
    mean_value_accel_in_r_m_axi_U->I_AWADDR(ap_var_for_const6);
    mean_value_accel_in_r_m_axi_U->I_AWID(ap_var_for_const1);
    mean_value_accel_in_r_m_axi_U->I_AWLEN(ap_var_for_const6);
    mean_value_accel_in_r_m_axi_U->I_AWSIZE(ap_var_for_const2);
    mean_value_accel_in_r_m_axi_U->I_AWLOCK(ap_var_for_const3);
    mean_value_accel_in_r_m_axi_U->I_AWCACHE(ap_var_for_const4);
    mean_value_accel_in_r_m_axi_U->I_AWQOS(ap_var_for_const4);
    mean_value_accel_in_r_m_axi_U->I_AWPROT(ap_var_for_const2);
    mean_value_accel_in_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    mean_value_accel_in_r_m_axi_U->I_AWBURST(ap_var_for_const3);
    mean_value_accel_in_r_m_axi_U->I_AWREGION(ap_var_for_const4);
    mean_value_accel_in_r_m_axi_U->I_WVALID(ap_var_for_const5);
    mean_value_accel_in_r_m_axi_U->I_WREADY(in_r_WREADY);
    mean_value_accel_in_r_m_axi_U->I_WDATA(ap_var_for_const6);
    mean_value_accel_in_r_m_axi_U->I_WID(ap_var_for_const1);
    mean_value_accel_in_r_m_axi_U->I_WUSER(ap_var_for_const1);
    mean_value_accel_in_r_m_axi_U->I_WLAST(ap_var_for_const5);
    mean_value_accel_in_r_m_axi_U->I_WSTRB(ap_var_for_const4);
    mean_value_accel_in_r_m_axi_U->I_BVALID(in_r_BVALID);
    mean_value_accel_in_r_m_axi_U->I_BREADY(ap_var_for_const5);
    mean_value_accel_in_r_m_axi_U->I_BRESP(in_r_BRESP);
    mean_value_accel_in_r_m_axi_U->I_BID(in_r_BID);
    mean_value_accel_in_r_m_axi_U->I_BUSER(in_r_BUSER);
    mean_value_accel_out_r_m_axi_U = new mean_value_accel_out_r_m_axi<32,32,5,16,16,16,16,C_M_AXI_OUT_R_ID_WIDTH,C_M_AXI_OUT_R_ADDR_WIDTH,C_M_AXI_OUT_R_DATA_WIDTH,C_M_AXI_OUT_R_AWUSER_WIDTH,C_M_AXI_OUT_R_ARUSER_WIDTH,C_M_AXI_OUT_R_WUSER_WIDTH,C_M_AXI_OUT_R_RUSER_WIDTH,C_M_AXI_OUT_R_BUSER_WIDTH,C_M_AXI_OUT_R_USER_VALUE,C_M_AXI_OUT_R_PROT_VALUE,C_M_AXI_OUT_R_CACHE_VALUE>("mean_value_accel_out_r_m_axi_U");
    mean_value_accel_out_r_m_axi_U->AWVALID(m_axi_out_r_AWVALID);
    mean_value_accel_out_r_m_axi_U->AWREADY(m_axi_out_r_AWREADY);
    mean_value_accel_out_r_m_axi_U->AWADDR(m_axi_out_r_AWADDR);
    mean_value_accel_out_r_m_axi_U->AWID(m_axi_out_r_AWID);
    mean_value_accel_out_r_m_axi_U->AWLEN(m_axi_out_r_AWLEN);
    mean_value_accel_out_r_m_axi_U->AWSIZE(m_axi_out_r_AWSIZE);
    mean_value_accel_out_r_m_axi_U->AWBURST(m_axi_out_r_AWBURST);
    mean_value_accel_out_r_m_axi_U->AWLOCK(m_axi_out_r_AWLOCK);
    mean_value_accel_out_r_m_axi_U->AWCACHE(m_axi_out_r_AWCACHE);
    mean_value_accel_out_r_m_axi_U->AWPROT(m_axi_out_r_AWPROT);
    mean_value_accel_out_r_m_axi_U->AWQOS(m_axi_out_r_AWQOS);
    mean_value_accel_out_r_m_axi_U->AWREGION(m_axi_out_r_AWREGION);
    mean_value_accel_out_r_m_axi_U->AWUSER(m_axi_out_r_AWUSER);
    mean_value_accel_out_r_m_axi_U->WVALID(m_axi_out_r_WVALID);
    mean_value_accel_out_r_m_axi_U->WREADY(m_axi_out_r_WREADY);
    mean_value_accel_out_r_m_axi_U->WDATA(m_axi_out_r_WDATA);
    mean_value_accel_out_r_m_axi_U->WSTRB(m_axi_out_r_WSTRB);
    mean_value_accel_out_r_m_axi_U->WLAST(m_axi_out_r_WLAST);
    mean_value_accel_out_r_m_axi_U->WID(m_axi_out_r_WID);
    mean_value_accel_out_r_m_axi_U->WUSER(m_axi_out_r_WUSER);
    mean_value_accel_out_r_m_axi_U->ARVALID(m_axi_out_r_ARVALID);
    mean_value_accel_out_r_m_axi_U->ARREADY(m_axi_out_r_ARREADY);
    mean_value_accel_out_r_m_axi_U->ARADDR(m_axi_out_r_ARADDR);
    mean_value_accel_out_r_m_axi_U->ARID(m_axi_out_r_ARID);
    mean_value_accel_out_r_m_axi_U->ARLEN(m_axi_out_r_ARLEN);
    mean_value_accel_out_r_m_axi_U->ARSIZE(m_axi_out_r_ARSIZE);
    mean_value_accel_out_r_m_axi_U->ARBURST(m_axi_out_r_ARBURST);
    mean_value_accel_out_r_m_axi_U->ARLOCK(m_axi_out_r_ARLOCK);
    mean_value_accel_out_r_m_axi_U->ARCACHE(m_axi_out_r_ARCACHE);
    mean_value_accel_out_r_m_axi_U->ARPROT(m_axi_out_r_ARPROT);
    mean_value_accel_out_r_m_axi_U->ARQOS(m_axi_out_r_ARQOS);
    mean_value_accel_out_r_m_axi_U->ARREGION(m_axi_out_r_ARREGION);
    mean_value_accel_out_r_m_axi_U->ARUSER(m_axi_out_r_ARUSER);
    mean_value_accel_out_r_m_axi_U->RVALID(m_axi_out_r_RVALID);
    mean_value_accel_out_r_m_axi_U->RREADY(m_axi_out_r_RREADY);
    mean_value_accel_out_r_m_axi_U->RDATA(m_axi_out_r_RDATA);
    mean_value_accel_out_r_m_axi_U->RLAST(m_axi_out_r_RLAST);
    mean_value_accel_out_r_m_axi_U->RID(m_axi_out_r_RID);
    mean_value_accel_out_r_m_axi_U->RUSER(m_axi_out_r_RUSER);
    mean_value_accel_out_r_m_axi_U->RRESP(m_axi_out_r_RRESP);
    mean_value_accel_out_r_m_axi_U->BVALID(m_axi_out_r_BVALID);
    mean_value_accel_out_r_m_axi_U->BREADY(m_axi_out_r_BREADY);
    mean_value_accel_out_r_m_axi_U->BRESP(m_axi_out_r_BRESP);
    mean_value_accel_out_r_m_axi_U->BID(m_axi_out_r_BID);
    mean_value_accel_out_r_m_axi_U->BUSER(m_axi_out_r_BUSER);
    mean_value_accel_out_r_m_axi_U->ACLK(ap_clk);
    mean_value_accel_out_r_m_axi_U->ARESET(ap_rst_n_inv);
    mean_value_accel_out_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    mean_value_accel_out_r_m_axi_U->I_ARVALID(ap_var_for_const5);
    mean_value_accel_out_r_m_axi_U->I_ARREADY(out_r_ARREADY);
    mean_value_accel_out_r_m_axi_U->I_ARADDR(ap_var_for_const6);
    mean_value_accel_out_r_m_axi_U->I_ARID(ap_var_for_const1);
    mean_value_accel_out_r_m_axi_U->I_ARLEN(ap_var_for_const6);
    mean_value_accel_out_r_m_axi_U->I_ARSIZE(ap_var_for_const2);
    mean_value_accel_out_r_m_axi_U->I_ARLOCK(ap_var_for_const3);
    mean_value_accel_out_r_m_axi_U->I_ARCACHE(ap_var_for_const4);
    mean_value_accel_out_r_m_axi_U->I_ARQOS(ap_var_for_const4);
    mean_value_accel_out_r_m_axi_U->I_ARPROT(ap_var_for_const2);
    mean_value_accel_out_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    mean_value_accel_out_r_m_axi_U->I_ARBURST(ap_var_for_const3);
    mean_value_accel_out_r_m_axi_U->I_ARREGION(ap_var_for_const4);
    mean_value_accel_out_r_m_axi_U->I_RVALID(out_r_RVALID);
    mean_value_accel_out_r_m_axi_U->I_RREADY(ap_var_for_const5);
    mean_value_accel_out_r_m_axi_U->I_RDATA(out_r_RDATA);
    mean_value_accel_out_r_m_axi_U->I_RID(out_r_RID);
    mean_value_accel_out_r_m_axi_U->I_RUSER(out_r_RUSER);
    mean_value_accel_out_r_m_axi_U->I_RRESP(out_r_RRESP);
    mean_value_accel_out_r_m_axi_U->I_RLAST(out_r_RLAST);
    mean_value_accel_out_r_m_axi_U->I_AWVALID(out_r_AWVALID);
    mean_value_accel_out_r_m_axi_U->I_AWREADY(out_r_AWREADY);
    mean_value_accel_out_r_m_axi_U->I_AWADDR(out_addr_reg_630);
    mean_value_accel_out_r_m_axi_U->I_AWID(ap_var_for_const1);
    mean_value_accel_out_r_m_axi_U->I_AWLEN(size);
    mean_value_accel_out_r_m_axi_U->I_AWSIZE(ap_var_for_const2);
    mean_value_accel_out_r_m_axi_U->I_AWLOCK(ap_var_for_const3);
    mean_value_accel_out_r_m_axi_U->I_AWCACHE(ap_var_for_const4);
    mean_value_accel_out_r_m_axi_U->I_AWQOS(ap_var_for_const4);
    mean_value_accel_out_r_m_axi_U->I_AWPROT(ap_var_for_const2);
    mean_value_accel_out_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    mean_value_accel_out_r_m_axi_U->I_AWBURST(ap_var_for_const3);
    mean_value_accel_out_r_m_axi_U->I_AWREGION(ap_var_for_const4);
    mean_value_accel_out_r_m_axi_U->I_WVALID(out_r_WVALID);
    mean_value_accel_out_r_m_axi_U->I_WREADY(out_r_WREADY);
    mean_value_accel_out_r_m_axi_U->I_WDATA(reg_303);
    mean_value_accel_out_r_m_axi_U->I_WID(ap_var_for_const1);
    mean_value_accel_out_r_m_axi_U->I_WUSER(ap_var_for_const1);
    mean_value_accel_out_r_m_axi_U->I_WLAST(ap_var_for_const5);
    mean_value_accel_out_r_m_axi_U->I_WSTRB(ap_var_for_const7);
    mean_value_accel_out_r_m_axi_U->I_BVALID(out_r_BVALID);
    mean_value_accel_out_r_m_axi_U->I_BREADY(out_r_BREADY);
    mean_value_accel_out_r_m_axi_U->I_BRESP(out_r_BRESP);
    mean_value_accel_out_r_m_axi_U->I_BID(out_r_BID);
    mean_value_accel_out_r_m_axi_U->I_BUSER(out_r_BUSER);
    local_buffer_U = new mean_value_accel_bkb("local_buffer_U");
    local_buffer_U->clk(ap_clk);
    local_buffer_U->reset(ap_rst_n_inv);
    local_buffer_U->address0(local_buffer_address0);
    local_buffer_U->ce0(local_buffer_ce0);
    local_buffer_U->we0(local_buffer_we0);
    local_buffer_U->d0(local_buffer_d0);
    local_buffer_U->q0(local_buffer_q0);
    local_buffer_U->address1(local_buffer_address1);
    local_buffer_U->ce1(local_buffer_ce1);
    local_buffer_U->we1(local_buffer_we1);
    local_buffer_U->d1(local_buffer_d1);
    local_buffer_U->q1(local_buffer_q1);
    mean_value_accel_cud_U1 = new mean_value_accel_cud<1,2,34,32,65>("mean_value_accel_cud_U1");
    mean_value_accel_cud_U1->clk(ap_clk);
    mean_value_accel_cud_U1->reset(ap_rst_n_inv);
    mean_value_accel_cud_U1->din0(grp_fu_451_p0);
    mean_value_accel_cud_U1->din1(tmp_7_reg_708);
    mean_value_accel_cud_U1->ce(ap_var_for_const0);
    mean_value_accel_cud_U1->dout(grp_fu_451_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_640 );
    sensitive << ( in_r_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_640 );
    sensitive << ( in_r_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state29_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state29_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state27_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state28_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state29_io);
    sensitive << ( ap_reg_pp1_iter1_tmp_13_reg_779 );
    sensitive << ( ap_sig_ioackin_out_r_WREADY );

    SC_METHOD(thread_ap_block_state29_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter1);
    sensitive << ( tmp_reg_640 );
    sensitive << ( in_r_RVALID );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state8);
    sensitive << ( tmp_fu_378_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state27);
    sensitive << ( tmp_13_fu_588_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( out_r_BVALID );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( out_r_BVALID );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_in_r_ARREADY);
    sensitive << ( in_r_ARREADY );
    sensitive << ( ap_reg_ioackin_in_r_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_out_r_AWREADY);
    sensitive << ( out_r_AWREADY );
    sensitive << ( ap_reg_ioackin_out_r_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_out_r_WREADY);
    sensitive << ( out_r_WREADY );
    sensitive << ( ap_reg_ioackin_out_r_WREADY );

    SC_METHOD(thread_grp_fu_279_p2);
    sensitive << ( local_buffer_q0 );
    sensitive << ( local_buffer_q1 );

    SC_METHOD(thread_grp_fu_317_p2);
    sensitive << ( reg_309 );

    SC_METHOD(thread_grp_fu_323_p4);
    sensitive << ( grp_fu_317_p2 );

    SC_METHOD(thread_grp_fu_451_p0);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_i1_cast_fu_394_p1);
    sensitive << ( i1_reg_256 );

    SC_METHOD(thread_i2_cast_fu_584_p1);
    sensitive << ( i2_reg_268 );

    SC_METHOD(thread_i_1_fu_383_p2);
    sensitive << ( i_reg_245 );

    SC_METHOD(thread_i_2_cast_fu_424_p1);
    sensitive << ( i_2_fu_418_p2 );

    SC_METHOD(thread_i_2_fu_418_p2);
    sensitive << ( i1_reg_256 );

    SC_METHOD(thread_i_3_fu_593_p2);
    sensitive << ( i2_reg_268 );

    SC_METHOD(thread_i_cast_fu_374_p1);
    sensitive << ( i_reg_245 );

    SC_METHOD(thread_in_offset1_fu_333_p4);
    sensitive << ( in_offset );

    SC_METHOD(thread_in_r_ARVALID);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_reg_ioackin_in_r_ARREADY );

    SC_METHOD(thread_in_r_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_640 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_r_blk_n_AR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_in_r_ARREADY );

    SC_METHOD(thread_in_r_blk_n_R);
    sensitive << ( m_axi_in_r_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_reg_640 );

    SC_METHOD(thread_local_buffer_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_reg_pp0_iter1_i_cast_reg_635 );
    sensitive << ( tmp_2_reg_654 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_3_fu_398_p2 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_4_cast_fu_413_p1 );
    sensitive << ( tmp_9_cast_fu_513_p1 );
    sensitive << ( tmp_12_cast_fu_579_p1 );

    SC_METHOD(thread_local_buffer_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i1_cast_reg_665 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( i_2_cast_fu_424_p1 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_5_cast_fu_548_p1 );
    sensitive << ( tmp_14_cast_fu_609_p1 );

    SC_METHOD(thread_local_buffer_ce0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_3_fu_398_p2 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_sig_ioackin_out_r_AWREADY );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_local_buffer_ce1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_local_buffer_d0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( in_addr_read_reg_649 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_8_fu_502_p3 );
    sensitive << ( tmp_11_fu_567_p3 );

    SC_METHOD(thread_local_buffer_d1);
    sensitive << ( tmp_30_reg_744 );
    sensitive << ( p_neg_t5_reg_749 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_23_fu_528_p1 );

    SC_METHOD(thread_local_buffer_we0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter1_tmp_reg_640 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_sig_ioackin_out_r_AWREADY );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_local_buffer_we1);
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_neg_mul_fu_467_p2);
    sensitive << ( mul_reg_724 );

    SC_METHOD(thread_neg_ti_fu_496_p2);
    sensitive << ( tmp_21_fu_489_p3 );

    SC_METHOD(thread_out_offset3_fu_354_p4);
    sensitive << ( out_offset );

    SC_METHOD(thread_out_r_AWVALID);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_reg_ioackin_out_r_AWREADY );

    SC_METHOD(thread_out_r_BREADY);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( out_r_BVALID );

    SC_METHOD(thread_out_r_WVALID);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_reg_pp1_iter1_tmp_13_reg_779 );
    sensitive << ( ap_reg_ioackin_out_r_WREADY );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_out_r_blk_n_AW);
    sensitive << ( m_axi_out_r_AWREADY );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_out_r_blk_n_B);
    sensitive << ( m_axi_out_r_BVALID );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_out_r_blk_n_W);
    sensitive << ( m_axi_out_r_WREADY );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_reg_pp1_iter1_tmp_13_reg_779 );

    SC_METHOD(thread_p_neg_t5_fu_522_p2);
    sensitive << ( tmp_22_fu_518_p1 );

    SC_METHOD(thread_p_neg_t_fu_557_p2);
    sensitive << ( tmp_24_fu_553_p1 );

    SC_METHOD(thread_tmp1_fu_429_p2);
    sensitive << ( reg_303 );
    sensitive << ( local_buffer_load_2_reg_703 );

    SC_METHOD(thread_tmp_11_fu_567_p3);
    sensitive << ( tmp_32_reg_769 );
    sensitive << ( p_neg_t_reg_774 );
    sensitive << ( tmp_25_fu_563_p1 );

    SC_METHOD(thread_tmp_12_cast_fu_579_p1);
    sensitive << ( tmp_12_fu_574_p2 );

    SC_METHOD(thread_tmp_12_fu_574_p2);
    sensitive << ( tmp_31_reg_759 );

    SC_METHOD(thread_tmp_13_fu_588_p2);
    sensitive << ( size );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( i2_cast_fu_584_p1 );

    SC_METHOD(thread_tmp_14_cast_fu_609_p1);
    sensitive << ( tmp_14_fu_603_p2 );

    SC_METHOD(thread_tmp_14_fu_603_p2);
    sensitive << ( tmp_33_fu_599_p1 );

    SC_METHOD(thread_tmp_18_fu_343_p1);
    sensitive << ( in_offset1_fu_333_p4 );

    SC_METHOD(thread_tmp_19_fu_482_p1);
    sensitive << ( tmp_28_fu_472_p4 );

    SC_METHOD(thread_tmp_20_fu_486_p1);
    sensitive << ( tmp_29_reg_729 );

    SC_METHOD(thread_tmp_21_fu_489_p3);
    sensitive << ( tmp_27_reg_713 );
    sensitive << ( tmp_20_fu_486_p1 );
    sensitive << ( tmp_19_fu_482_p1 );

    SC_METHOD(thread_tmp_22_fu_518_p1);
    sensitive << ( grp_fu_323_p4 );

    SC_METHOD(thread_tmp_23_fu_528_p1);
    sensitive << ( reg_313 );

    SC_METHOD(thread_tmp_24_fu_553_p1);
    sensitive << ( grp_fu_323_p4 );

    SC_METHOD(thread_tmp_25_fu_563_p1);
    sensitive << ( reg_313 );

    SC_METHOD(thread_tmp_26_fu_403_p1);
    sensitive << ( i1_reg_256 );

    SC_METHOD(thread_tmp_28_fu_472_p4);
    sensitive << ( neg_mul_fu_467_p2 );

    SC_METHOD(thread_tmp_2_fu_389_p2);
    sensitive << ( size );

    SC_METHOD(thread_tmp_31_fu_539_p1);
    sensitive << ( size );

    SC_METHOD(thread_tmp_33_fu_599_p1);
    sensitive << ( i2_reg_268 );

    SC_METHOD(thread_tmp_3_fu_398_p2);
    sensitive << ( tmp_2_reg_654 );
    sensitive << ( i1_cast_fu_394_p1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_tmp_4_cast_fu_413_p1);
    sensitive << ( tmp_4_fu_407_p2 );

    SC_METHOD(thread_tmp_4_fu_407_p2);
    sensitive << ( tmp_26_fu_403_p1 );

    SC_METHOD(thread_tmp_5_cast_fu_548_p1);
    sensitive << ( tmp_5_fu_542_p2 );

    SC_METHOD(thread_tmp_5_fu_542_p2);
    sensitive << ( tmp_31_fu_539_p1 );

    SC_METHOD(thread_tmp_6_fu_364_p1);
    sensitive << ( out_offset3_fu_354_p4 );

    SC_METHOD(thread_tmp_7_fu_434_p2);
    sensitive << ( local_buffer_q1 );
    sensitive << ( tmp1_fu_429_p2 );

    SC_METHOD(thread_tmp_8_fu_502_p3);
    sensitive << ( tmp_27_reg_713 );
    sensitive << ( tmp_20_reg_734 );
    sensitive << ( neg_ti_reg_739 );

    SC_METHOD(thread_tmp_9_cast_fu_513_p1);
    sensitive << ( tmp_9_fu_508_p2 );

    SC_METHOD(thread_tmp_9_fu_508_p2);
    sensitive << ( tmp_26_reg_673 );

    SC_METHOD(thread_tmp_fu_378_p2);
    sensitive << ( size );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_cast_fu_374_p1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( out_r_BVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_sig_ioackin_in_r_ARREADY );
    sensitive << ( tmp_fu_378_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_3_fu_398_p2 );
    sensitive << ( tmp_13_fu_588_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_sig_ioackin_out_r_AWREADY );
    sensitive << ( ap_block_pp1_stage0_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const7);

    ap_CS_fsm = "000000000000000000000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_reg_ioackin_in_r_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_out_r_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_out_r_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mean_value_accel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_in_r_AWVALID, "(port)m_axi_in_r_AWVALID");
    sc_trace(mVcdFile, m_axi_in_r_AWREADY, "(port)m_axi_in_r_AWREADY");
    sc_trace(mVcdFile, m_axi_in_r_AWADDR, "(port)m_axi_in_r_AWADDR");
    sc_trace(mVcdFile, m_axi_in_r_AWID, "(port)m_axi_in_r_AWID");
    sc_trace(mVcdFile, m_axi_in_r_AWLEN, "(port)m_axi_in_r_AWLEN");
    sc_trace(mVcdFile, m_axi_in_r_AWSIZE, "(port)m_axi_in_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_in_r_AWBURST, "(port)m_axi_in_r_AWBURST");
    sc_trace(mVcdFile, m_axi_in_r_AWLOCK, "(port)m_axi_in_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_in_r_AWCACHE, "(port)m_axi_in_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_in_r_AWPROT, "(port)m_axi_in_r_AWPROT");
    sc_trace(mVcdFile, m_axi_in_r_AWQOS, "(port)m_axi_in_r_AWQOS");
    sc_trace(mVcdFile, m_axi_in_r_AWREGION, "(port)m_axi_in_r_AWREGION");
    sc_trace(mVcdFile, m_axi_in_r_AWUSER, "(port)m_axi_in_r_AWUSER");
    sc_trace(mVcdFile, m_axi_in_r_WVALID, "(port)m_axi_in_r_WVALID");
    sc_trace(mVcdFile, m_axi_in_r_WREADY, "(port)m_axi_in_r_WREADY");
    sc_trace(mVcdFile, m_axi_in_r_WDATA, "(port)m_axi_in_r_WDATA");
    sc_trace(mVcdFile, m_axi_in_r_WSTRB, "(port)m_axi_in_r_WSTRB");
    sc_trace(mVcdFile, m_axi_in_r_WLAST, "(port)m_axi_in_r_WLAST");
    sc_trace(mVcdFile, m_axi_in_r_WID, "(port)m_axi_in_r_WID");
    sc_trace(mVcdFile, m_axi_in_r_WUSER, "(port)m_axi_in_r_WUSER");
    sc_trace(mVcdFile, m_axi_in_r_ARVALID, "(port)m_axi_in_r_ARVALID");
    sc_trace(mVcdFile, m_axi_in_r_ARREADY, "(port)m_axi_in_r_ARREADY");
    sc_trace(mVcdFile, m_axi_in_r_ARADDR, "(port)m_axi_in_r_ARADDR");
    sc_trace(mVcdFile, m_axi_in_r_ARID, "(port)m_axi_in_r_ARID");
    sc_trace(mVcdFile, m_axi_in_r_ARLEN, "(port)m_axi_in_r_ARLEN");
    sc_trace(mVcdFile, m_axi_in_r_ARSIZE, "(port)m_axi_in_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_in_r_ARBURST, "(port)m_axi_in_r_ARBURST");
    sc_trace(mVcdFile, m_axi_in_r_ARLOCK, "(port)m_axi_in_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_in_r_ARCACHE, "(port)m_axi_in_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_in_r_ARPROT, "(port)m_axi_in_r_ARPROT");
    sc_trace(mVcdFile, m_axi_in_r_ARQOS, "(port)m_axi_in_r_ARQOS");
    sc_trace(mVcdFile, m_axi_in_r_ARREGION, "(port)m_axi_in_r_ARREGION");
    sc_trace(mVcdFile, m_axi_in_r_ARUSER, "(port)m_axi_in_r_ARUSER");
    sc_trace(mVcdFile, m_axi_in_r_RVALID, "(port)m_axi_in_r_RVALID");
    sc_trace(mVcdFile, m_axi_in_r_RREADY, "(port)m_axi_in_r_RREADY");
    sc_trace(mVcdFile, m_axi_in_r_RDATA, "(port)m_axi_in_r_RDATA");
    sc_trace(mVcdFile, m_axi_in_r_RLAST, "(port)m_axi_in_r_RLAST");
    sc_trace(mVcdFile, m_axi_in_r_RID, "(port)m_axi_in_r_RID");
    sc_trace(mVcdFile, m_axi_in_r_RUSER, "(port)m_axi_in_r_RUSER");
    sc_trace(mVcdFile, m_axi_in_r_RRESP, "(port)m_axi_in_r_RRESP");
    sc_trace(mVcdFile, m_axi_in_r_BVALID, "(port)m_axi_in_r_BVALID");
    sc_trace(mVcdFile, m_axi_in_r_BREADY, "(port)m_axi_in_r_BREADY");
    sc_trace(mVcdFile, m_axi_in_r_BRESP, "(port)m_axi_in_r_BRESP");
    sc_trace(mVcdFile, m_axi_in_r_BID, "(port)m_axi_in_r_BID");
    sc_trace(mVcdFile, m_axi_in_r_BUSER, "(port)m_axi_in_r_BUSER");
    sc_trace(mVcdFile, m_axi_out_r_AWVALID, "(port)m_axi_out_r_AWVALID");
    sc_trace(mVcdFile, m_axi_out_r_AWREADY, "(port)m_axi_out_r_AWREADY");
    sc_trace(mVcdFile, m_axi_out_r_AWADDR, "(port)m_axi_out_r_AWADDR");
    sc_trace(mVcdFile, m_axi_out_r_AWID, "(port)m_axi_out_r_AWID");
    sc_trace(mVcdFile, m_axi_out_r_AWLEN, "(port)m_axi_out_r_AWLEN");
    sc_trace(mVcdFile, m_axi_out_r_AWSIZE, "(port)m_axi_out_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_out_r_AWBURST, "(port)m_axi_out_r_AWBURST");
    sc_trace(mVcdFile, m_axi_out_r_AWLOCK, "(port)m_axi_out_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_out_r_AWCACHE, "(port)m_axi_out_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_out_r_AWPROT, "(port)m_axi_out_r_AWPROT");
    sc_trace(mVcdFile, m_axi_out_r_AWQOS, "(port)m_axi_out_r_AWQOS");
    sc_trace(mVcdFile, m_axi_out_r_AWREGION, "(port)m_axi_out_r_AWREGION");
    sc_trace(mVcdFile, m_axi_out_r_AWUSER, "(port)m_axi_out_r_AWUSER");
    sc_trace(mVcdFile, m_axi_out_r_WVALID, "(port)m_axi_out_r_WVALID");
    sc_trace(mVcdFile, m_axi_out_r_WREADY, "(port)m_axi_out_r_WREADY");
    sc_trace(mVcdFile, m_axi_out_r_WDATA, "(port)m_axi_out_r_WDATA");
    sc_trace(mVcdFile, m_axi_out_r_WSTRB, "(port)m_axi_out_r_WSTRB");
    sc_trace(mVcdFile, m_axi_out_r_WLAST, "(port)m_axi_out_r_WLAST");
    sc_trace(mVcdFile, m_axi_out_r_WID, "(port)m_axi_out_r_WID");
    sc_trace(mVcdFile, m_axi_out_r_WUSER, "(port)m_axi_out_r_WUSER");
    sc_trace(mVcdFile, m_axi_out_r_ARVALID, "(port)m_axi_out_r_ARVALID");
    sc_trace(mVcdFile, m_axi_out_r_ARREADY, "(port)m_axi_out_r_ARREADY");
    sc_trace(mVcdFile, m_axi_out_r_ARADDR, "(port)m_axi_out_r_ARADDR");
    sc_trace(mVcdFile, m_axi_out_r_ARID, "(port)m_axi_out_r_ARID");
    sc_trace(mVcdFile, m_axi_out_r_ARLEN, "(port)m_axi_out_r_ARLEN");
    sc_trace(mVcdFile, m_axi_out_r_ARSIZE, "(port)m_axi_out_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_out_r_ARBURST, "(port)m_axi_out_r_ARBURST");
    sc_trace(mVcdFile, m_axi_out_r_ARLOCK, "(port)m_axi_out_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_out_r_ARCACHE, "(port)m_axi_out_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_out_r_ARPROT, "(port)m_axi_out_r_ARPROT");
    sc_trace(mVcdFile, m_axi_out_r_ARQOS, "(port)m_axi_out_r_ARQOS");
    sc_trace(mVcdFile, m_axi_out_r_ARREGION, "(port)m_axi_out_r_ARREGION");
    sc_trace(mVcdFile, m_axi_out_r_ARUSER, "(port)m_axi_out_r_ARUSER");
    sc_trace(mVcdFile, m_axi_out_r_RVALID, "(port)m_axi_out_r_RVALID");
    sc_trace(mVcdFile, m_axi_out_r_RREADY, "(port)m_axi_out_r_RREADY");
    sc_trace(mVcdFile, m_axi_out_r_RDATA, "(port)m_axi_out_r_RDATA");
    sc_trace(mVcdFile, m_axi_out_r_RLAST, "(port)m_axi_out_r_RLAST");
    sc_trace(mVcdFile, m_axi_out_r_RID, "(port)m_axi_out_r_RID");
    sc_trace(mVcdFile, m_axi_out_r_RUSER, "(port)m_axi_out_r_RUSER");
    sc_trace(mVcdFile, m_axi_out_r_RRESP, "(port)m_axi_out_r_RRESP");
    sc_trace(mVcdFile, m_axi_out_r_BVALID, "(port)m_axi_out_r_BVALID");
    sc_trace(mVcdFile, m_axi_out_r_BREADY, "(port)m_axi_out_r_BREADY");
    sc_trace(mVcdFile, m_axi_out_r_BRESP, "(port)m_axi_out_r_BRESP");
    sc_trace(mVcdFile, m_axi_out_r_BID, "(port)m_axi_out_r_BID");
    sc_trace(mVcdFile, m_axi_out_r_BUSER, "(port)m_axi_out_r_BUSER");
    sc_trace(mVcdFile, in_offset, "(port)in_offset");
    sc_trace(mVcdFile, out_offset, "(port)out_offset");
    sc_trace(mVcdFile, size, "(port)size");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_r_blk_n_AR, "in_r_blk_n_AR");
    sc_trace(mVcdFile, in_r_blk_n_R, "in_r_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_reg_640, "tmp_reg_640");
    sc_trace(mVcdFile, out_r_blk_n_AW, "out_r_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, out_r_blk_n_W, "out_r_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, tmp_13_reg_779, "tmp_13_reg_779");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_tmp_13_reg_779, "ap_reg_pp1_iter1_tmp_13_reg_779");
    sc_trace(mVcdFile, out_r_blk_n_B, "out_r_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, in_r_AWREADY, "in_r_AWREADY");
    sc_trace(mVcdFile, in_r_WREADY, "in_r_WREADY");
    sc_trace(mVcdFile, in_r_ARVALID, "in_r_ARVALID");
    sc_trace(mVcdFile, in_r_ARREADY, "in_r_ARREADY");
    sc_trace(mVcdFile, in_r_RVALID, "in_r_RVALID");
    sc_trace(mVcdFile, in_r_RREADY, "in_r_RREADY");
    sc_trace(mVcdFile, in_r_RDATA, "in_r_RDATA");
    sc_trace(mVcdFile, in_r_RLAST, "in_r_RLAST");
    sc_trace(mVcdFile, in_r_RID, "in_r_RID");
    sc_trace(mVcdFile, in_r_RUSER, "in_r_RUSER");
    sc_trace(mVcdFile, in_r_RRESP, "in_r_RRESP");
    sc_trace(mVcdFile, in_r_BVALID, "in_r_BVALID");
    sc_trace(mVcdFile, in_r_BRESP, "in_r_BRESP");
    sc_trace(mVcdFile, in_r_BID, "in_r_BID");
    sc_trace(mVcdFile, in_r_BUSER, "in_r_BUSER");
    sc_trace(mVcdFile, out_r_AWVALID, "out_r_AWVALID");
    sc_trace(mVcdFile, out_r_AWREADY, "out_r_AWREADY");
    sc_trace(mVcdFile, out_r_WVALID, "out_r_WVALID");
    sc_trace(mVcdFile, out_r_WREADY, "out_r_WREADY");
    sc_trace(mVcdFile, out_r_ARREADY, "out_r_ARREADY");
    sc_trace(mVcdFile, out_r_RVALID, "out_r_RVALID");
    sc_trace(mVcdFile, out_r_RDATA, "out_r_RDATA");
    sc_trace(mVcdFile, out_r_RLAST, "out_r_RLAST");
    sc_trace(mVcdFile, out_r_RID, "out_r_RID");
    sc_trace(mVcdFile, out_r_RUSER, "out_r_RUSER");
    sc_trace(mVcdFile, out_r_RRESP, "out_r_RRESP");
    sc_trace(mVcdFile, out_r_BVALID, "out_r_BVALID");
    sc_trace(mVcdFile, out_r_BREADY, "out_r_BREADY");
    sc_trace(mVcdFile, out_r_BRESP, "out_r_BRESP");
    sc_trace(mVcdFile, out_r_BID, "out_r_BID");
    sc_trace(mVcdFile, out_r_BUSER, "out_r_BUSER");
    sc_trace(mVcdFile, i_reg_245, "i_reg_245");
    sc_trace(mVcdFile, i2_reg_268, "i2_reg_268");
    sc_trace(mVcdFile, local_buffer_q0, "local_buffer_q0");
    sc_trace(mVcdFile, reg_303, "reg_303");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, local_buffer_q1, "local_buffer_q1");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_state27_pp1_stage0_iter0, "ap_block_state27_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state28_pp1_stage0_iter1, "ap_block_state28_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state29_pp1_stage0_iter2, "ap_block_state29_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_out_r_WREADY, "ap_sig_ioackin_out_r_WREADY");
    sc_trace(mVcdFile, ap_block_state29_io, "ap_block_state29_io");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, grp_fu_279_p2, "grp_fu_279_p2");
    sc_trace(mVcdFile, reg_309, "reg_309");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, reg_313, "reg_313");
    sc_trace(mVcdFile, ap_sig_ioackin_in_r_ARREADY, "ap_sig_ioackin_in_r_ARREADY");
    sc_trace(mVcdFile, out_addr_reg_630, "out_addr_reg_630");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_cast_fu_374_p1, "i_cast_fu_374_p1");
    sc_trace(mVcdFile, i_cast_reg_635, "i_cast_reg_635");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter0, "ap_block_state8_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter1, "ap_block_state9_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter2, "ap_block_state10_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_i_cast_reg_635, "ap_reg_pp0_iter1_i_cast_reg_635");
    sc_trace(mVcdFile, tmp_fu_378_p2, "tmp_fu_378_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_tmp_reg_640, "ap_reg_pp0_iter1_tmp_reg_640");
    sc_trace(mVcdFile, i_1_fu_383_p2, "i_1_fu_383_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, in_addr_read_reg_649, "in_addr_read_reg_649");
    sc_trace(mVcdFile, tmp_2_fu_389_p2, "tmp_2_fu_389_p2");
    sc_trace(mVcdFile, tmp_2_reg_654, "tmp_2_reg_654");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i1_cast_fu_394_p1, "i1_cast_fu_394_p1");
    sc_trace(mVcdFile, i1_cast_reg_665, "i1_cast_reg_665");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_26_fu_403_p1, "tmp_26_fu_403_p1");
    sc_trace(mVcdFile, tmp_26_reg_673, "tmp_26_reg_673");
    sc_trace(mVcdFile, tmp_3_fu_398_p2, "tmp_3_fu_398_p2");
    sc_trace(mVcdFile, i_2_fu_418_p2, "i_2_fu_418_p2");
    sc_trace(mVcdFile, i_2_reg_688, "i_2_reg_688");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, local_buffer_load_2_reg_703, "local_buffer_load_2_reg_703");
    sc_trace(mVcdFile, tmp_7_fu_434_p2, "tmp_7_fu_434_p2");
    sc_trace(mVcdFile, tmp_7_reg_708, "tmp_7_reg_708");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_27_reg_713, "tmp_27_reg_713");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_fu_451_p2, "grp_fu_451_p2");
    sc_trace(mVcdFile, mul_reg_724, "mul_reg_724");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_29_reg_729, "tmp_29_reg_729");
    sc_trace(mVcdFile, tmp_20_fu_486_p1, "tmp_20_fu_486_p1");
    sc_trace(mVcdFile, tmp_20_reg_734, "tmp_20_reg_734");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, neg_ti_fu_496_p2, "neg_ti_fu_496_p2");
    sc_trace(mVcdFile, neg_ti_reg_739, "neg_ti_reg_739");
    sc_trace(mVcdFile, tmp_30_reg_744, "tmp_30_reg_744");
    sc_trace(mVcdFile, p_neg_t5_fu_522_p2, "p_neg_t5_fu_522_p2");
    sc_trace(mVcdFile, p_neg_t5_reg_749, "p_neg_t5_reg_749");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_31_fu_539_p1, "tmp_31_fu_539_p1");
    sc_trace(mVcdFile, tmp_31_reg_759, "tmp_31_reg_759");
    sc_trace(mVcdFile, tmp_32_reg_769, "tmp_32_reg_769");
    sc_trace(mVcdFile, p_neg_t_fu_557_p2, "p_neg_t_fu_557_p2");
    sc_trace(mVcdFile, p_neg_t_reg_774, "p_neg_t_reg_774");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, tmp_13_fu_588_p2, "tmp_13_fu_588_p2");
    sc_trace(mVcdFile, i_3_fu_593_p2, "i_3_fu_593_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state8, "ap_condition_pp0_exit_iter0_state8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_out_r_AWREADY, "ap_sig_ioackin_out_r_AWREADY");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state27, "ap_condition_pp1_exit_iter0_state27");
    sc_trace(mVcdFile, local_buffer_address0, "local_buffer_address0");
    sc_trace(mVcdFile, local_buffer_ce0, "local_buffer_ce0");
    sc_trace(mVcdFile, local_buffer_we0, "local_buffer_we0");
    sc_trace(mVcdFile, local_buffer_d0, "local_buffer_d0");
    sc_trace(mVcdFile, local_buffer_address1, "local_buffer_address1");
    sc_trace(mVcdFile, local_buffer_ce1, "local_buffer_ce1");
    sc_trace(mVcdFile, local_buffer_we1, "local_buffer_we1");
    sc_trace(mVcdFile, local_buffer_d1, "local_buffer_d1");
    sc_trace(mVcdFile, i1_reg_256, "i1_reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_4_cast_fu_413_p1, "tmp_4_cast_fu_413_p1");
    sc_trace(mVcdFile, i_2_cast_fu_424_p1, "i_2_cast_fu_424_p1");
    sc_trace(mVcdFile, tmp_9_cast_fu_513_p1, "tmp_9_cast_fu_513_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_5_cast_fu_548_p1, "tmp_5_cast_fu_548_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_579_p1, "tmp_12_cast_fu_579_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_609_p1, "tmp_14_cast_fu_609_p1");
    sc_trace(mVcdFile, tmp_18_fu_343_p1, "tmp_18_fu_343_p1");
    sc_trace(mVcdFile, tmp_6_fu_364_p1, "tmp_6_fu_364_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_in_r_ARREADY, "ap_reg_ioackin_in_r_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_out_r_AWREADY, "ap_reg_ioackin_out_r_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_out_r_WREADY, "ap_reg_ioackin_out_r_WREADY");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, tmp_8_fu_502_p3, "tmp_8_fu_502_p3");
    sc_trace(mVcdFile, tmp_11_fu_567_p3, "tmp_11_fu_567_p3");
    sc_trace(mVcdFile, grp_fu_317_p2, "grp_fu_317_p2");
    sc_trace(mVcdFile, in_offset1_fu_333_p4, "in_offset1_fu_333_p4");
    sc_trace(mVcdFile, out_offset3_fu_354_p4, "out_offset3_fu_354_p4");
    sc_trace(mVcdFile, tmp_4_fu_407_p2, "tmp_4_fu_407_p2");
    sc_trace(mVcdFile, tmp1_fu_429_p2, "tmp1_fu_429_p2");
    sc_trace(mVcdFile, grp_fu_451_p0, "grp_fu_451_p0");
    sc_trace(mVcdFile, neg_mul_fu_467_p2, "neg_mul_fu_467_p2");
    sc_trace(mVcdFile, tmp_28_fu_472_p4, "tmp_28_fu_472_p4");
    sc_trace(mVcdFile, tmp_19_fu_482_p1, "tmp_19_fu_482_p1");
    sc_trace(mVcdFile, tmp_21_fu_489_p3, "tmp_21_fu_489_p3");
    sc_trace(mVcdFile, tmp_9_fu_508_p2, "tmp_9_fu_508_p2");
    sc_trace(mVcdFile, grp_fu_323_p4, "grp_fu_323_p4");
    sc_trace(mVcdFile, tmp_22_fu_518_p1, "tmp_22_fu_518_p1");
    sc_trace(mVcdFile, tmp_23_fu_528_p1, "tmp_23_fu_528_p1");
    sc_trace(mVcdFile, tmp_5_fu_542_p2, "tmp_5_fu_542_p2");
    sc_trace(mVcdFile, tmp_24_fu_553_p1, "tmp_24_fu_553_p1");
    sc_trace(mVcdFile, tmp_25_fu_563_p1, "tmp_25_fu_563_p1");
    sc_trace(mVcdFile, tmp_12_fu_574_p2, "tmp_12_fu_574_p2");
    sc_trace(mVcdFile, i2_cast_fu_584_p1, "i2_cast_fu_584_p1");
    sc_trace(mVcdFile, tmp_33_fu_599_p1, "tmp_33_fu_599_p1");
    sc_trace(mVcdFile, tmp_14_fu_603_p2, "tmp_14_fu_603_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("mean_value_accel.hdltvin.dat");
    mHdltvoutHandle.open("mean_value_accel.hdltvout.dat");
}

mean_value_accel::~mean_value_accel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete mean_value_accel_in_r_m_axi_U;
    delete mean_value_accel_out_r_m_axi_U;
    delete local_buffer_U;
    delete mean_value_accel_cud_U1;
}

void mean_value_accel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mean_value_accel::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_logic_0;
}

void mean_value_accel::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv32_0;
}

void mean_value_accel::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void mean_value_accel::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv3_0;
}

void mean_value_accel::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv2_0;
}

void mean_value_accel::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv4_0;
}

void mean_value_accel::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv4_F;
}

void mean_value_accel::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state8.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state8.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state8.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state27.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
                    esl_seteq<1,1,1>(ap_sig_ioackin_out_r_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state27.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state27.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
                    esl_seteq<1,1,1>(ap_sig_ioackin_out_r_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_in_r_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            if (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_in_r_ARREADY.read()))) {
                ap_reg_ioackin_in_r_ARREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, in_r_ARREADY.read()))) {
                ap_reg_ioackin_in_r_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_out_r_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_out_r_AWREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_out_r_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, out_r_AWREADY.read())) {
                ap_reg_ioackin_out_r_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_out_r_WREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp1_iter1_tmp_13_reg_779.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_out_r_WREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, out_r_WREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_out_r_WREADY = ap_const_logic_1;
            }
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i1_reg_256 = ap_const_lv31_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        i1_reg_256 = i_2_reg_688.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_588_p2.read()))) {
        i2_reg_268 = i_3_fu_593_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
                esl_seteq<1,1,1>(ap_sig_ioackin_out_r_AWREADY.read(), ap_const_logic_1))) {
        i2_reg_268 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_378_p2.read()))) {
        i_reg_245 = i_1_fu_383_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_reg_245 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_reg_779.read()))) {
        reg_303 = local_buffer_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        reg_303 = local_buffer_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_i_cast_reg_635 = i_cast_reg_635.read();
        ap_reg_pp0_iter1_tmp_reg_640 = tmp_reg_640.read();
        i_cast_reg_635 = i_cast_fu_374_p1.read();
        tmp_reg_640 = tmp_fu_378_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp1_iter1_tmp_13_reg_779 = tmp_13_reg_779.read();
        tmp_13_reg_779 = tmp_13_fu_588_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i1_cast_reg_665 = i1_cast_fu_394_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_2_reg_688 = i_2_fu_418_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_reg_640.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_addr_read_reg_649 = in_r_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        local_buffer_load_2_reg_703 = local_buffer_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        mul_reg_724 = grp_fu_451_p2.read();
        tmp_29_reg_729 = grp_fu_451_p2.read().range(64, 34);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_27_reg_713.read()))) {
        neg_ti_reg_739 = neg_ti_fu_496_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_addr_reg_630 = tmp_6_fu_364_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_30_reg_744.read()))) {
        p_neg_t5_reg_749 = p_neg_t5_fu_522_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_769.read()))) {
        p_neg_t_reg_774 = p_neg_t_fu_557_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        reg_309 = grp_fu_279_p2.read();
        reg_313 = grp_fu_279_p2.read().range(31, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        tmp_20_reg_734 = tmp_20_fu_486_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_398_p2.read()))) {
        tmp_26_reg_673 = tmp_26_fu_403_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_27_reg_713 = tmp_7_fu_434_p2.read().range(31, 31);
        tmp_7_reg_708 = tmp_7_fu_434_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_2_reg_654 = tmp_2_fu_389_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        tmp_30_reg_744 = grp_fu_279_p2.read().range(31, 31);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tmp_31_reg_759 = tmp_31_fu_539_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        tmp_32_reg_769 = grp_fu_279_p2.read().range(31, 31);
    }
}

void mean_value_accel::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[7];
}

void mean_value_accel::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[24];
}

void mean_value_accel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mean_value_accel::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[8];
}

void mean_value_accel::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[9];
}

void mean_value_accel::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[10];
}

void mean_value_accel::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[11];
}

void mean_value_accel::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[12];
}

void mean_value_accel::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[13];
}

void mean_value_accel::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[14];
}

void mean_value_accel::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[15];
}

void mean_value_accel::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[16];
}

void mean_value_accel::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[17];
}

void mean_value_accel::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[18];
}

void mean_value_accel::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[19];
}

void mean_value_accel::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[20];
}

void mean_value_accel::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[21];
}

void mean_value_accel::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[22];
}

void mean_value_accel::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[23];
}

void mean_value_accel::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[29];
}

void mean_value_accel::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void mean_value_accel::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mean_value_accel::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_reg_640.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_RVALID.read()));
}

void mean_value_accel::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_reg_640.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_RVALID.read()));
}

void mean_value_accel::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mean_value_accel::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mean_value_accel::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state29_io.read()));
}

void mean_value_accel::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state29_io.read()));
}

void mean_value_accel::thread_ap_block_state10_pp0_stage0_iter2() {
    ap_block_state10_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mean_value_accel::thread_ap_block_state27_pp1_stage0_iter0() {
    ap_block_state27_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mean_value_accel::thread_ap_block_state28_pp1_stage0_iter1() {
    ap_block_state28_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mean_value_accel::thread_ap_block_state29_io() {
    ap_block_state29_io = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp1_iter1_tmp_13_reg_779.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_r_WREADY.read()));
}

void mean_value_accel::thread_ap_block_state29_pp1_stage0_iter2() {
    ap_block_state29_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mean_value_accel::thread_ap_block_state8_pp0_stage0_iter0() {
    ap_block_state8_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mean_value_accel::thread_ap_block_state9_pp0_stage0_iter1() {
    ap_block_state9_pp0_stage0_iter1 = (esl_seteq<1,1,1>(tmp_reg_640.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_RVALID.read()));
}

void mean_value_accel::thread_ap_condition_pp0_exit_iter0_state8() {
    if (esl_seteq<1,1,1>(tmp_fu_378_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp0_exit_iter0_state8 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state8 = ap_const_logic_0;
    }
}

void mean_value_accel::thread_ap_condition_pp1_exit_iter0_state27() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_588_p2.read())) {
        ap_condition_pp1_exit_iter0_state27 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state27 = ap_const_logic_0;
    }
}

void mean_value_accel::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
         esl_seteq<1,1,1>(out_r_BVALID.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mean_value_accel::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void mean_value_accel::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void mean_value_accel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mean_value_accel::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void mean_value_accel::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void mean_value_accel::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
         esl_seteq<1,1,1>(out_r_BVALID.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mean_value_accel::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void mean_value_accel::thread_ap_sig_ioackin_in_r_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_in_r_ARREADY.read())) {
        ap_sig_ioackin_in_r_ARREADY = in_r_ARREADY.read();
    } else {
        ap_sig_ioackin_in_r_ARREADY = ap_const_logic_1;
    }
}

void mean_value_accel::thread_ap_sig_ioackin_out_r_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_r_AWREADY.read())) {
        ap_sig_ioackin_out_r_AWREADY = out_r_AWREADY.read();
    } else {
        ap_sig_ioackin_out_r_AWREADY = ap_const_logic_1;
    }
}

void mean_value_accel::thread_ap_sig_ioackin_out_r_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_r_WREADY.read())) {
        ap_sig_ioackin_out_r_WREADY = out_r_WREADY.read();
    } else {
        ap_sig_ioackin_out_r_WREADY = ap_const_logic_1;
    }
}

void mean_value_accel::thread_grp_fu_279_p2() {
    grp_fu_279_p2 = (!local_buffer_q1.read().is_01() || !local_buffer_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(local_buffer_q1.read()) + sc_biguint<32>(local_buffer_q0.read()));
}

void mean_value_accel::thread_grp_fu_317_p2() {
    grp_fu_317_p2 = (!ap_const_lv32_0.is_01() || !reg_309.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(reg_309.read()));
}

void mean_value_accel::thread_grp_fu_323_p4() {
    grp_fu_323_p4 = grp_fu_317_p2.read().range(31, 1);
}

void mean_value_accel::thread_grp_fu_451_p0() {
    grp_fu_451_p0 =  (sc_lv<34>) (ap_const_lv65_155555556);
}

void mean_value_accel::thread_i1_cast_fu_394_p1() {
    i1_cast_fu_394_p1 = esl_zext<32,31>(i1_reg_256.read());
}

void mean_value_accel::thread_i2_cast_fu_584_p1() {
    i2_cast_fu_584_p1 = esl_zext<32,31>(i2_reg_268.read());
}

void mean_value_accel::thread_i_1_fu_383_p2() {
    i_1_fu_383_p2 = (!i_reg_245.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_reg_245.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void mean_value_accel::thread_i_2_cast_fu_424_p1() {
    i_2_cast_fu_424_p1 = esl_zext<32,31>(i_2_fu_418_p2.read());
}

void mean_value_accel::thread_i_2_fu_418_p2() {
    i_2_fu_418_p2 = (!ap_const_lv31_1.is_01() || !i1_reg_256.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(i1_reg_256.read()));
}

void mean_value_accel::thread_i_3_fu_593_p2() {
    i_3_fu_593_p2 = (!i2_reg_268.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i2_reg_268.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void mean_value_accel::thread_i_cast_fu_374_p1() {
    i_cast_fu_374_p1 = esl_zext<32,31>(i_reg_245.read());
}

void mean_value_accel::thread_in_offset1_fu_333_p4() {
    in_offset1_fu_333_p4 = in_offset.read().range(31, 2);
}

void mean_value_accel::thread_in_r_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_in_r_ARREADY.read()))) {
        in_r_ARVALID = ap_const_logic_1;
    } else {
        in_r_ARVALID = ap_const_logic_0;
    }
}

void mean_value_accel::thread_in_r_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_reg_640.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_r_RREADY = ap_const_logic_1;
    } else {
        in_r_RREADY = ap_const_logic_0;
    }
}

void mean_value_accel::thread_in_r_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        in_r_blk_n_AR = m_axi_in_r_ARREADY.read();
    } else {
        in_r_blk_n_AR = ap_const_logic_1;
    }
}

void mean_value_accel::thread_in_r_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_reg_640.read(), ap_const_lv1_1))) {
        in_r_blk_n_R = m_axi_in_r_RVALID.read();
    } else {
        in_r_blk_n_R = ap_const_logic_1;
    }
}

void mean_value_accel::thread_local_buffer_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        local_buffer_address0 =  (sc_lv<11>) (tmp_12_cast_fu_579_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        local_buffer_address0 =  (sc_lv<11>) (tmp_2_reg_654.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        local_buffer_address0 =  (sc_lv<11>) (tmp_9_cast_fu_513_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(tmp_3_fu_398_p2.read(), ap_const_lv1_0))) {
        local_buffer_address0 =  (sc_lv<11>) (ap_const_lv32_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_398_p2.read()))) {
        local_buffer_address0 =  (sc_lv<11>) (tmp_4_cast_fu_413_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        local_buffer_address0 =  (sc_lv<11>) (ap_reg_pp0_iter1_i_cast_reg_635.read());
    } else {
        local_buffer_address0 = "XXXXXXXXXXX";
    }
}

void mean_value_accel::thread_local_buffer_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        local_buffer_address1 =  (sc_lv<11>) (tmp_14_cast_fu_609_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        local_buffer_address1 =  (sc_lv<11>) (tmp_5_cast_fu_548_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        local_buffer_address1 =  (sc_lv<11>) (ap_const_lv32_400);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        local_buffer_address1 =  (sc_lv<11>) (i1_cast_reg_665.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        local_buffer_address1 =  (sc_lv<11>) (i_2_cast_fu_424_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        local_buffer_address1 =  (sc_lv<11>) (ap_const_lv32_1);
    } else {
        local_buffer_address1 = "XXXXXXXXXXX";
    }
}

void mean_value_accel::thread_local_buffer_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_398_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(tmp_3_fu_398_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(ap_sig_ioackin_out_r_AWREADY.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        local_buffer_ce0 = ap_const_logic_1;
    } else {
        local_buffer_ce0 = ap_const_logic_0;
    }
}

void mean_value_accel::thread_local_buffer_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        local_buffer_ce1 = ap_const_logic_1;
    } else {
        local_buffer_ce1 = ap_const_logic_0;
    }
}

void mean_value_accel::thread_local_buffer_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        local_buffer_d0 = tmp_11_fu_567_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        local_buffer_d0 = tmp_8_fu_502_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        local_buffer_d0 = in_addr_read_reg_649.read();
    } else {
        local_buffer_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void mean_value_accel::thread_local_buffer_d1() {
    local_buffer_d1 = (!tmp_30_reg_744.read()[0].is_01())? sc_lv<32>(): ((tmp_30_reg_744.read()[0].to_bool())? p_neg_t5_reg_749.read(): tmp_23_fu_528_p1.read());
}

void mean_value_accel::thread_local_buffer_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(ap_sig_ioackin_out_r_AWREADY.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_tmp_reg_640.read())))) {
        local_buffer_we0 = ap_const_logic_1;
    } else {
        local_buffer_we0 = ap_const_logic_0;
    }
}

void mean_value_accel::thread_local_buffer_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        local_buffer_we1 = ap_const_logic_1;
    } else {
        local_buffer_we1 = ap_const_logic_0;
    }
}

void mean_value_accel::thread_neg_mul_fu_467_p2() {
    neg_mul_fu_467_p2 = (!ap_const_lv65_0.is_01() || !mul_reg_724.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul_reg_724.read()));
}

void mean_value_accel::thread_neg_ti_fu_496_p2() {
    neg_ti_fu_496_p2 = (!ap_const_lv32_0.is_01() || !tmp_21_fu_489_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_21_fu_489_p3.read()));
}

void mean_value_accel::thread_out_offset3_fu_354_p4() {
    out_offset3_fu_354_p4 = out_offset.read().range(31, 2);
}

void mean_value_accel::thread_out_r_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_r_AWREADY.read()))) {
        out_r_AWVALID = ap_const_logic_1;
    } else {
        out_r_AWVALID = ap_const_logic_0;
    }
}

void mean_value_accel::thread_out_r_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
         esl_seteq<1,1,1>(out_r_BVALID.read(), ap_const_logic_1))) {
        out_r_BREADY = ap_const_logic_1;
    } else {
        out_r_BREADY = ap_const_logic_0;
    }
}

void mean_value_accel::thread_out_r_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp1_iter1_tmp_13_reg_779.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_r_WREADY.read()))) {
        out_r_WVALID = ap_const_logic_1;
    } else {
        out_r_WVALID = ap_const_logic_0;
    }
}

void mean_value_accel::thread_out_r_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        out_r_blk_n_AW = m_axi_out_r_AWREADY.read();
    } else {
        out_r_blk_n_AW = ap_const_logic_1;
    }
}

void mean_value_accel::thread_out_r_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        out_r_blk_n_B = m_axi_out_r_BVALID.read();
    } else {
        out_r_blk_n_B = ap_const_logic_1;
    }
}

void mean_value_accel::thread_out_r_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp1_iter1_tmp_13_reg_779.read()))) {
        out_r_blk_n_W = m_axi_out_r_WREADY.read();
    } else {
        out_r_blk_n_W = ap_const_logic_1;
    }
}

void mean_value_accel::thread_p_neg_t5_fu_522_p2() {
    p_neg_t5_fu_522_p2 = (!ap_const_lv32_0.is_01() || !tmp_22_fu_518_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_22_fu_518_p1.read()));
}

void mean_value_accel::thread_p_neg_t_fu_557_p2() {
    p_neg_t_fu_557_p2 = (!ap_const_lv32_0.is_01() || !tmp_24_fu_553_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_24_fu_553_p1.read()));
}

void mean_value_accel::thread_tmp1_fu_429_p2() {
    tmp1_fu_429_p2 = (!local_buffer_load_2_reg_703.read().is_01() || !reg_303.read().is_01())? sc_lv<32>(): (sc_biguint<32>(local_buffer_load_2_reg_703.read()) + sc_biguint<32>(reg_303.read()));
}

void mean_value_accel::thread_tmp_11_fu_567_p3() {
    tmp_11_fu_567_p3 = (!tmp_32_reg_769.read()[0].is_01())? sc_lv<32>(): ((tmp_32_reg_769.read()[0].to_bool())? p_neg_t_reg_774.read(): tmp_25_fu_563_p1.read());
}

void mean_value_accel::thread_tmp_12_cast_fu_579_p1() {
    tmp_12_cast_fu_579_p1 = esl_zext<32,13>(tmp_12_fu_574_p2.read());
}

void mean_value_accel::thread_tmp_12_fu_574_p2() {
    tmp_12_fu_574_p2 = (!ap_const_lv13_3FF.is_01() || !tmp_31_reg_759.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_3FF) + sc_biguint<13>(tmp_31_reg_759.read()));
}

void mean_value_accel::thread_tmp_13_fu_588_p2() {
    tmp_13_fu_588_p2 = (!i2_cast_fu_584_p1.read().is_01() || !size.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i2_cast_fu_584_p1.read()) < sc_bigint<32>(size.read()));
}

void mean_value_accel::thread_tmp_14_cast_fu_609_p1() {
    tmp_14_cast_fu_609_p1 = esl_sext<32,13>(tmp_14_fu_603_p2.read());
}

void mean_value_accel::thread_tmp_14_fu_603_p2() {
    tmp_14_fu_603_p2 = (!ap_const_lv13_400.is_01() || !tmp_33_fu_599_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_400) + sc_biguint<13>(tmp_33_fu_599_p1.read()));
}

void mean_value_accel::thread_tmp_18_fu_343_p1() {
    tmp_18_fu_343_p1 = esl_zext<32,30>(in_offset1_fu_333_p4.read());
}

void mean_value_accel::thread_tmp_19_fu_482_p1() {
    tmp_19_fu_482_p1 = esl_sext<32,31>(tmp_28_fu_472_p4.read());
}

void mean_value_accel::thread_tmp_20_fu_486_p1() {
    tmp_20_fu_486_p1 = esl_sext<32,31>(tmp_29_reg_729.read());
}

void mean_value_accel::thread_tmp_21_fu_489_p3() {
    tmp_21_fu_489_p3 = (!tmp_27_reg_713.read()[0].is_01())? sc_lv<32>(): ((tmp_27_reg_713.read()[0].to_bool())? tmp_19_fu_482_p1.read(): tmp_20_fu_486_p1.read());
}

void mean_value_accel::thread_tmp_22_fu_518_p1() {
    tmp_22_fu_518_p1 = esl_zext<32,31>(grp_fu_323_p4.read());
}

void mean_value_accel::thread_tmp_23_fu_528_p1() {
    tmp_23_fu_528_p1 = esl_zext<32,31>(reg_313.read());
}

void mean_value_accel::thread_tmp_24_fu_553_p1() {
    tmp_24_fu_553_p1 = esl_zext<32,31>(grp_fu_323_p4.read());
}

void mean_value_accel::thread_tmp_25_fu_563_p1() {
    tmp_25_fu_563_p1 = esl_zext<32,31>(reg_313.read());
}

void mean_value_accel::thread_tmp_26_fu_403_p1() {
    tmp_26_fu_403_p1 = i1_reg_256.read().range(13-1, 0);
}

void mean_value_accel::thread_tmp_28_fu_472_p4() {
    tmp_28_fu_472_p4 = neg_mul_fu_467_p2.read().range(64, 34);
}

void mean_value_accel::thread_tmp_2_fu_389_p2() {
    tmp_2_fu_389_p2 = (!size.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(size.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void mean_value_accel::thread_tmp_31_fu_539_p1() {
    tmp_31_fu_539_p1 = size.read().range(13-1, 0);
}

void mean_value_accel::thread_tmp_33_fu_599_p1() {
    tmp_33_fu_599_p1 = i2_reg_268.read().range(13-1, 0);
}

void mean_value_accel::thread_tmp_3_fu_398_p2() {
    tmp_3_fu_398_p2 = (!i1_cast_fu_394_p1.read().is_01() || !tmp_2_reg_654.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i1_cast_fu_394_p1.read()) < sc_bigint<32>(tmp_2_reg_654.read()));
}

void mean_value_accel::thread_tmp_4_cast_fu_413_p1() {
    tmp_4_cast_fu_413_p1 = esl_zext<32,13>(tmp_4_fu_407_p2.read());
}

void mean_value_accel::thread_tmp_4_fu_407_p2() {
    tmp_4_fu_407_p2 = (!ap_const_lv13_1FFF.is_01() || !tmp_26_fu_403_p1.read().is_01())? sc_lv<13>(): (sc_bigint<13>(ap_const_lv13_1FFF) + sc_biguint<13>(tmp_26_fu_403_p1.read()));
}

void mean_value_accel::thread_tmp_5_cast_fu_548_p1() {
    tmp_5_cast_fu_548_p1 = esl_zext<32,13>(tmp_5_fu_542_p2.read());
}

void mean_value_accel::thread_tmp_5_fu_542_p2() {
    tmp_5_fu_542_p2 = (!ap_const_lv13_1FFE.is_01() || !tmp_31_fu_539_p1.read().is_01())? sc_lv<13>(): (sc_bigint<13>(ap_const_lv13_1FFE) + sc_biguint<13>(tmp_31_fu_539_p1.read()));
}

void mean_value_accel::thread_tmp_6_fu_364_p1() {
    tmp_6_fu_364_p1 = esl_zext<32,30>(out_offset3_fu_354_p4.read());
}

void mean_value_accel::thread_tmp_7_fu_434_p2() {
    tmp_7_fu_434_p2 = (!local_buffer_q1.read().is_01() || !tmp1_fu_429_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(local_buffer_q1.read()) + sc_biguint<32>(tmp1_fu_429_p2.read()));
}

void mean_value_accel::thread_tmp_8_fu_502_p3() {
    tmp_8_fu_502_p3 = (!tmp_27_reg_713.read()[0].is_01())? sc_lv<32>(): ((tmp_27_reg_713.read()[0].to_bool())? neg_ti_reg_739.read(): tmp_20_reg_734.read());
}

void mean_value_accel::thread_tmp_9_cast_fu_513_p1() {
    tmp_9_cast_fu_513_p1 = esl_zext<32,13>(tmp_9_fu_508_p2.read());
}

void mean_value_accel::thread_tmp_9_fu_508_p2() {
    tmp_9_fu_508_p2 = (!ap_const_lv13_400.is_01() || !tmp_26_reg_673.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_400) + sc_biguint<13>(tmp_26_reg_673.read()));
}

void mean_value_accel::thread_tmp_fu_378_p2() {
    tmp_fu_378_p2 = (!i_cast_fu_374_p1.read().is_01() || !size.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_cast_fu_374_p1.read()) < sc_bigint<32>(size.read()));
}

void mean_value_accel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_in_r_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_fu_378_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_fu_378_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(tmp_3_fu_398_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_out_r_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 16777216 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_588_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_588_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && esl_seteq<1,1,1>(out_r_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state34;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<30>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void mean_value_accel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWVALID\" :  \"" << m_axi_in_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_AWREADY\" :  \"" << m_axi_in_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWADDR\" :  \"" << m_axi_in_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWID\" :  \"" << m_axi_in_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWLEN\" :  \"" << m_axi_in_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWSIZE\" :  \"" << m_axi_in_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWBURST\" :  \"" << m_axi_in_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWLOCK\" :  \"" << m_axi_in_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWCACHE\" :  \"" << m_axi_in_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWPROT\" :  \"" << m_axi_in_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWQOS\" :  \"" << m_axi_in_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWREGION\" :  \"" << m_axi_in_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_AWUSER\" :  \"" << m_axi_in_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_WVALID\" :  \"" << m_axi_in_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_WREADY\" :  \"" << m_axi_in_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_WDATA\" :  \"" << m_axi_in_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_WSTRB\" :  \"" << m_axi_in_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_WLAST\" :  \"" << m_axi_in_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_WID\" :  \"" << m_axi_in_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_WUSER\" :  \"" << m_axi_in_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARVALID\" :  \"" << m_axi_in_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_ARREADY\" :  \"" << m_axi_in_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARADDR\" :  \"" << m_axi_in_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARID\" :  \"" << m_axi_in_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARLEN\" :  \"" << m_axi_in_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARSIZE\" :  \"" << m_axi_in_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARBURST\" :  \"" << m_axi_in_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARLOCK\" :  \"" << m_axi_in_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARCACHE\" :  \"" << m_axi_in_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARPROT\" :  \"" << m_axi_in_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARQOS\" :  \"" << m_axi_in_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARREGION\" :  \"" << m_axi_in_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_ARUSER\" :  \"" << m_axi_in_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_RVALID\" :  \"" << m_axi_in_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_RREADY\" :  \"" << m_axi_in_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_RDATA\" :  \"" << m_axi_in_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_RLAST\" :  \"" << m_axi_in_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_RID\" :  \"" << m_axi_in_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_RUSER\" :  \"" << m_axi_in_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_RRESP\" :  \"" << m_axi_in_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_BVALID\" :  \"" << m_axi_in_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_in_r_BREADY\" :  \"" << m_axi_in_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_BRESP\" :  \"" << m_axi_in_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_BID\" :  \"" << m_axi_in_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_in_r_BUSER\" :  \"" << m_axi_in_r_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWVALID\" :  \"" << m_axi_out_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_AWREADY\" :  \"" << m_axi_out_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWADDR\" :  \"" << m_axi_out_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWID\" :  \"" << m_axi_out_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWLEN\" :  \"" << m_axi_out_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWSIZE\" :  \"" << m_axi_out_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWBURST\" :  \"" << m_axi_out_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWLOCK\" :  \"" << m_axi_out_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWCACHE\" :  \"" << m_axi_out_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWPROT\" :  \"" << m_axi_out_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWQOS\" :  \"" << m_axi_out_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWREGION\" :  \"" << m_axi_out_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_AWUSER\" :  \"" << m_axi_out_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_WVALID\" :  \"" << m_axi_out_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_WREADY\" :  \"" << m_axi_out_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_WDATA\" :  \"" << m_axi_out_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_WSTRB\" :  \"" << m_axi_out_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_WLAST\" :  \"" << m_axi_out_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_WID\" :  \"" << m_axi_out_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_WUSER\" :  \"" << m_axi_out_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARVALID\" :  \"" << m_axi_out_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_ARREADY\" :  \"" << m_axi_out_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARADDR\" :  \"" << m_axi_out_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARID\" :  \"" << m_axi_out_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARLEN\" :  \"" << m_axi_out_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARSIZE\" :  \"" << m_axi_out_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARBURST\" :  \"" << m_axi_out_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARLOCK\" :  \"" << m_axi_out_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARCACHE\" :  \"" << m_axi_out_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARPROT\" :  \"" << m_axi_out_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARQOS\" :  \"" << m_axi_out_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARREGION\" :  \"" << m_axi_out_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_ARUSER\" :  \"" << m_axi_out_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_RVALID\" :  \"" << m_axi_out_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_RREADY\" :  \"" << m_axi_out_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_RDATA\" :  \"" << m_axi_out_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_RLAST\" :  \"" << m_axi_out_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_RID\" :  \"" << m_axi_out_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_RUSER\" :  \"" << m_axi_out_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_RRESP\" :  \"" << m_axi_out_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_BVALID\" :  \"" << m_axi_out_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_out_r_BREADY\" :  \"" << m_axi_out_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_BRESP\" :  \"" << m_axi_out_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_BID\" :  \"" << m_axi_out_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_out_r_BUSER\" :  \"" << m_axi_out_r_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_offset\" :  \"" << in_offset.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_offset\" :  \"" << out_offset.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"size\" :  \"" << size.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

