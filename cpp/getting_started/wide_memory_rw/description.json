{
    "example": "Wide Memory Read/Write",
    "overview": [
        "This is a simple example of vector addition to demonstrate Wide Memory Access using ap_uint<512> data type. Based on input argument type, sds++ compiler will figure out the memory bandwidth between global memory and kernel. For this example, ap_uint<512> datatype is used, so memory datawidth will be 16 x (integer bit size) = 16 x 32 = 512bit"
    ],
    "key_concepts": [ "Kernel to DDR", "wide memory access", "burst read and write"],
    "keywords": ["ap_uint<>", "ap_int.h"],
    "board": ["zc702", "zc706", "zcu102", "zcu102_es2"],
    "contributors" : [
        {
            "group": "Xilinx",
            "url" : "http://www.xilinx.com"
        }
    ],
    "revision" : [
        {
            "date" : "MAR2017",
            "version": "1.0",
            "description": "Initial Xilinx Release"
        }
    ],
    "accelerators": [
       {
           "name" : "vadd_accel",
           "location" : "vadd.cpp"
       }
    ],
    "source_dir" : "src/*.cpp",
    "device" : "zc706",
    "os" : "linux" 
}
