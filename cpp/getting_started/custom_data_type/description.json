{
    "example": "Custom Data Type",
    "overview": [
        "This is a simple example of RGB to HSV conversion to demonstrate Custom Data Type usage in hardware accelerator. Xilinx HLS compiler supports custom data type to operate within the hardware function and also it acts as a memory interface between PL to DDR"
    ],
    "key_concepts": [ "Dataflow", "Custom Data type"],
    "keywords": ["struct", "#pragma HLS data_pack", "#pragma HLS LOOP_TRIPCOUNT"],
    "contributors" : [
        {
            "group": "Xilinx",
            "url" : "http://www.xilinx.com"
        }
    ],
    "revision" : [
        {
            "date" : "JUNE2017",
            "version": "1.0",
            "description": "Initial Xilinx Release"
        }
    ],
    "compiler" : {
        "options" : "-Wno-unused-label"
    },
    "accelerators": [
       {
           "name" : "rgb_to_hsv_accel",
           "location" : "rgb_to_hsv.cpp"
       }
    ],
    "libs": [
            "sds_utils"
    ],
    "source_dir" : "src/*.cpp",
    "os" : [
            "linux",
            "standalone"
    ],
    "runtime" : [
            "C/C++"
    ],
    "pass_string" : "TEST PASSED",
    "fail_string" : "TEST FAILED" 
}
