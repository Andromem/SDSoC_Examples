// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mmult_accel_HH_
#define _mmult_accel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "mmult_accel_mul_3bkb.h"
#include "mmult_accel_bufa.h"
#include "mmult_accel_a_m_axi.h"
#include "mmult_accel_b_m_axi.h"
#include "mmult_accel_c_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_A_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_A_ID_WIDTH = 1,
         unsigned int C_M_AXI_A_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_DATA_WIDTH = 32,
         unsigned int C_M_AXI_A_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_B_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_B_ID_WIDTH = 1,
         unsigned int C_M_AXI_B_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_B_DATA_WIDTH = 32,
         unsigned int C_M_AXI_B_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_B_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_B_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_B_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_C_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_C_ID_WIDTH = 1,
         unsigned int C_M_AXI_C_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_C_DATA_WIDTH = 32,
         unsigned int C_M_AXI_C_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_C_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_C_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_C_BUSER_WIDTH = 1>
struct mmult_accel : public sc_module {
    // Port declarations 145
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_a_AWVALID;
    sc_in< sc_logic > m_axi_a_AWREADY;
    sc_out< sc_uint<C_M_AXI_A_ADDR_WIDTH> > m_axi_a_AWADDR;
    sc_out< sc_uint<C_M_AXI_A_ID_WIDTH> > m_axi_a_AWID;
    sc_out< sc_lv<8> > m_axi_a_AWLEN;
    sc_out< sc_lv<3> > m_axi_a_AWSIZE;
    sc_out< sc_lv<2> > m_axi_a_AWBURST;
    sc_out< sc_lv<2> > m_axi_a_AWLOCK;
    sc_out< sc_lv<4> > m_axi_a_AWCACHE;
    sc_out< sc_lv<3> > m_axi_a_AWPROT;
    sc_out< sc_lv<4> > m_axi_a_AWQOS;
    sc_out< sc_lv<4> > m_axi_a_AWREGION;
    sc_out< sc_uint<C_M_AXI_A_AWUSER_WIDTH> > m_axi_a_AWUSER;
    sc_out< sc_logic > m_axi_a_WVALID;
    sc_in< sc_logic > m_axi_a_WREADY;
    sc_out< sc_uint<C_M_AXI_A_DATA_WIDTH> > m_axi_a_WDATA;
    sc_out< sc_uint<C_M_AXI_A_DATA_WIDTH/8> > m_axi_a_WSTRB;
    sc_out< sc_logic > m_axi_a_WLAST;
    sc_out< sc_uint<C_M_AXI_A_ID_WIDTH> > m_axi_a_WID;
    sc_out< sc_uint<C_M_AXI_A_WUSER_WIDTH> > m_axi_a_WUSER;
    sc_out< sc_logic > m_axi_a_ARVALID;
    sc_in< sc_logic > m_axi_a_ARREADY;
    sc_out< sc_uint<C_M_AXI_A_ADDR_WIDTH> > m_axi_a_ARADDR;
    sc_out< sc_uint<C_M_AXI_A_ID_WIDTH> > m_axi_a_ARID;
    sc_out< sc_lv<8> > m_axi_a_ARLEN;
    sc_out< sc_lv<3> > m_axi_a_ARSIZE;
    sc_out< sc_lv<2> > m_axi_a_ARBURST;
    sc_out< sc_lv<2> > m_axi_a_ARLOCK;
    sc_out< sc_lv<4> > m_axi_a_ARCACHE;
    sc_out< sc_lv<3> > m_axi_a_ARPROT;
    sc_out< sc_lv<4> > m_axi_a_ARQOS;
    sc_out< sc_lv<4> > m_axi_a_ARREGION;
    sc_out< sc_uint<C_M_AXI_A_ARUSER_WIDTH> > m_axi_a_ARUSER;
    sc_in< sc_logic > m_axi_a_RVALID;
    sc_out< sc_logic > m_axi_a_RREADY;
    sc_in< sc_uint<C_M_AXI_A_DATA_WIDTH> > m_axi_a_RDATA;
    sc_in< sc_logic > m_axi_a_RLAST;
    sc_in< sc_uint<C_M_AXI_A_ID_WIDTH> > m_axi_a_RID;
    sc_in< sc_uint<C_M_AXI_A_RUSER_WIDTH> > m_axi_a_RUSER;
    sc_in< sc_lv<2> > m_axi_a_RRESP;
    sc_in< sc_logic > m_axi_a_BVALID;
    sc_out< sc_logic > m_axi_a_BREADY;
    sc_in< sc_lv<2> > m_axi_a_BRESP;
    sc_in< sc_uint<C_M_AXI_A_ID_WIDTH> > m_axi_a_BID;
    sc_in< sc_uint<C_M_AXI_A_BUSER_WIDTH> > m_axi_a_BUSER;
    sc_out< sc_logic > m_axi_b_AWVALID;
    sc_in< sc_logic > m_axi_b_AWREADY;
    sc_out< sc_uint<C_M_AXI_B_ADDR_WIDTH> > m_axi_b_AWADDR;
    sc_out< sc_uint<C_M_AXI_B_ID_WIDTH> > m_axi_b_AWID;
    sc_out< sc_lv<8> > m_axi_b_AWLEN;
    sc_out< sc_lv<3> > m_axi_b_AWSIZE;
    sc_out< sc_lv<2> > m_axi_b_AWBURST;
    sc_out< sc_lv<2> > m_axi_b_AWLOCK;
    sc_out< sc_lv<4> > m_axi_b_AWCACHE;
    sc_out< sc_lv<3> > m_axi_b_AWPROT;
    sc_out< sc_lv<4> > m_axi_b_AWQOS;
    sc_out< sc_lv<4> > m_axi_b_AWREGION;
    sc_out< sc_uint<C_M_AXI_B_AWUSER_WIDTH> > m_axi_b_AWUSER;
    sc_out< sc_logic > m_axi_b_WVALID;
    sc_in< sc_logic > m_axi_b_WREADY;
    sc_out< sc_uint<C_M_AXI_B_DATA_WIDTH> > m_axi_b_WDATA;
    sc_out< sc_uint<C_M_AXI_B_DATA_WIDTH/8> > m_axi_b_WSTRB;
    sc_out< sc_logic > m_axi_b_WLAST;
    sc_out< sc_uint<C_M_AXI_B_ID_WIDTH> > m_axi_b_WID;
    sc_out< sc_uint<C_M_AXI_B_WUSER_WIDTH> > m_axi_b_WUSER;
    sc_out< sc_logic > m_axi_b_ARVALID;
    sc_in< sc_logic > m_axi_b_ARREADY;
    sc_out< sc_uint<C_M_AXI_B_ADDR_WIDTH> > m_axi_b_ARADDR;
    sc_out< sc_uint<C_M_AXI_B_ID_WIDTH> > m_axi_b_ARID;
    sc_out< sc_lv<8> > m_axi_b_ARLEN;
    sc_out< sc_lv<3> > m_axi_b_ARSIZE;
    sc_out< sc_lv<2> > m_axi_b_ARBURST;
    sc_out< sc_lv<2> > m_axi_b_ARLOCK;
    sc_out< sc_lv<4> > m_axi_b_ARCACHE;
    sc_out< sc_lv<3> > m_axi_b_ARPROT;
    sc_out< sc_lv<4> > m_axi_b_ARQOS;
    sc_out< sc_lv<4> > m_axi_b_ARREGION;
    sc_out< sc_uint<C_M_AXI_B_ARUSER_WIDTH> > m_axi_b_ARUSER;
    sc_in< sc_logic > m_axi_b_RVALID;
    sc_out< sc_logic > m_axi_b_RREADY;
    sc_in< sc_uint<C_M_AXI_B_DATA_WIDTH> > m_axi_b_RDATA;
    sc_in< sc_logic > m_axi_b_RLAST;
    sc_in< sc_uint<C_M_AXI_B_ID_WIDTH> > m_axi_b_RID;
    sc_in< sc_uint<C_M_AXI_B_RUSER_WIDTH> > m_axi_b_RUSER;
    sc_in< sc_lv<2> > m_axi_b_RRESP;
    sc_in< sc_logic > m_axi_b_BVALID;
    sc_out< sc_logic > m_axi_b_BREADY;
    sc_in< sc_lv<2> > m_axi_b_BRESP;
    sc_in< sc_uint<C_M_AXI_B_ID_WIDTH> > m_axi_b_BID;
    sc_in< sc_uint<C_M_AXI_B_BUSER_WIDTH> > m_axi_b_BUSER;
    sc_out< sc_logic > m_axi_c_AWVALID;
    sc_in< sc_logic > m_axi_c_AWREADY;
    sc_out< sc_uint<C_M_AXI_C_ADDR_WIDTH> > m_axi_c_AWADDR;
    sc_out< sc_uint<C_M_AXI_C_ID_WIDTH> > m_axi_c_AWID;
    sc_out< sc_lv<8> > m_axi_c_AWLEN;
    sc_out< sc_lv<3> > m_axi_c_AWSIZE;
    sc_out< sc_lv<2> > m_axi_c_AWBURST;
    sc_out< sc_lv<2> > m_axi_c_AWLOCK;
    sc_out< sc_lv<4> > m_axi_c_AWCACHE;
    sc_out< sc_lv<3> > m_axi_c_AWPROT;
    sc_out< sc_lv<4> > m_axi_c_AWQOS;
    sc_out< sc_lv<4> > m_axi_c_AWREGION;
    sc_out< sc_uint<C_M_AXI_C_AWUSER_WIDTH> > m_axi_c_AWUSER;
    sc_out< sc_logic > m_axi_c_WVALID;
    sc_in< sc_logic > m_axi_c_WREADY;
    sc_out< sc_uint<C_M_AXI_C_DATA_WIDTH> > m_axi_c_WDATA;
    sc_out< sc_uint<C_M_AXI_C_DATA_WIDTH/8> > m_axi_c_WSTRB;
    sc_out< sc_logic > m_axi_c_WLAST;
    sc_out< sc_uint<C_M_AXI_C_ID_WIDTH> > m_axi_c_WID;
    sc_out< sc_uint<C_M_AXI_C_WUSER_WIDTH> > m_axi_c_WUSER;
    sc_out< sc_logic > m_axi_c_ARVALID;
    sc_in< sc_logic > m_axi_c_ARREADY;
    sc_out< sc_uint<C_M_AXI_C_ADDR_WIDTH> > m_axi_c_ARADDR;
    sc_out< sc_uint<C_M_AXI_C_ID_WIDTH> > m_axi_c_ARID;
    sc_out< sc_lv<8> > m_axi_c_ARLEN;
    sc_out< sc_lv<3> > m_axi_c_ARSIZE;
    sc_out< sc_lv<2> > m_axi_c_ARBURST;
    sc_out< sc_lv<2> > m_axi_c_ARLOCK;
    sc_out< sc_lv<4> > m_axi_c_ARCACHE;
    sc_out< sc_lv<3> > m_axi_c_ARPROT;
    sc_out< sc_lv<4> > m_axi_c_ARQOS;
    sc_out< sc_lv<4> > m_axi_c_ARREGION;
    sc_out< sc_uint<C_M_AXI_C_ARUSER_WIDTH> > m_axi_c_ARUSER;
    sc_in< sc_logic > m_axi_c_RVALID;
    sc_out< sc_logic > m_axi_c_RREADY;
    sc_in< sc_uint<C_M_AXI_C_DATA_WIDTH> > m_axi_c_RDATA;
    sc_in< sc_logic > m_axi_c_RLAST;
    sc_in< sc_uint<C_M_AXI_C_ID_WIDTH> > m_axi_c_RID;
    sc_in< sc_uint<C_M_AXI_C_RUSER_WIDTH> > m_axi_c_RUSER;
    sc_in< sc_lv<2> > m_axi_c_RRESP;
    sc_in< sc_logic > m_axi_c_BVALID;
    sc_out< sc_logic > m_axi_c_BREADY;
    sc_in< sc_lv<2> > m_axi_c_BRESP;
    sc_in< sc_uint<C_M_AXI_C_ID_WIDTH> > m_axi_c_BID;
    sc_in< sc_uint<C_M_AXI_C_BUSER_WIDTH> > m_axi_c_BUSER;
    sc_in< sc_lv<32> > a_offset;
    sc_in< sc_lv<32> > b_offset;
    sc_in< sc_lv<32> > c_offset;
    sc_in< sc_lv<32> > size;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const5;
    sc_signal< sc_lv<32> > ap_var_for_const6;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<3> > ap_var_for_const2;
    sc_signal< sc_lv<2> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const7;


    // Module declarations
    mmult_accel(sc_module_name name);
    SC_HAS_PROCESS(mmult_accel);

    ~mmult_accel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    mmult_accel_a_m_axi<32,32,5,16,16,16,16,C_M_AXI_A_ID_WIDTH,C_M_AXI_A_ADDR_WIDTH,C_M_AXI_A_DATA_WIDTH,C_M_AXI_A_AWUSER_WIDTH,C_M_AXI_A_ARUSER_WIDTH,C_M_AXI_A_WUSER_WIDTH,C_M_AXI_A_RUSER_WIDTH,C_M_AXI_A_BUSER_WIDTH,C_M_AXI_A_USER_VALUE,C_M_AXI_A_PROT_VALUE,C_M_AXI_A_CACHE_VALUE>* mmult_accel_a_m_axi_U;
    mmult_accel_b_m_axi<32,32,5,16,16,16,16,C_M_AXI_B_ID_WIDTH,C_M_AXI_B_ADDR_WIDTH,C_M_AXI_B_DATA_WIDTH,C_M_AXI_B_AWUSER_WIDTH,C_M_AXI_B_ARUSER_WIDTH,C_M_AXI_B_WUSER_WIDTH,C_M_AXI_B_RUSER_WIDTH,C_M_AXI_B_BUSER_WIDTH,C_M_AXI_B_USER_VALUE,C_M_AXI_B_PROT_VALUE,C_M_AXI_B_CACHE_VALUE>* mmult_accel_b_m_axi_U;
    mmult_accel_c_m_axi<32,32,5,16,16,16,16,C_M_AXI_C_ID_WIDTH,C_M_AXI_C_ADDR_WIDTH,C_M_AXI_C_DATA_WIDTH,C_M_AXI_C_AWUSER_WIDTH,C_M_AXI_C_ARUSER_WIDTH,C_M_AXI_C_WUSER_WIDTH,C_M_AXI_C_RUSER_WIDTH,C_M_AXI_C_BUSER_WIDTH,C_M_AXI_C_USER_VALUE,C_M_AXI_C_PROT_VALUE,C_M_AXI_C_CACHE_VALUE>* mmult_accel_c_m_axi_U;
    mmult_accel_bufa* bufa_U;
    mmult_accel_bufa* bufb_U;
    mmult_accel_bufa* bufc_U;
    mmult_accel_mul_3bkb<1,2,32,32,32>* mmult_accel_mul_3bkb_U1;
    mmult_accel_mul_3bkb<1,2,32,32,32>* mmult_accel_mul_3bkb_U2;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<30> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > a_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > a_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > tmp_1_fu_479_p2;
    sc_signal< sc_logic > b_blk_n_AR;
    sc_signal< sc_logic > b_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<1> > tmp_6_fu_558_p2;
    sc_signal< sc_logic > c_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<1> > tmp_s_fu_618_p2;
    sc_signal< sc_logic > c_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > c_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_logic > a_AWREADY;
    sc_signal< sc_logic > a_WREADY;
    sc_signal< sc_logic > a_ARVALID;
    sc_signal< sc_logic > a_ARREADY;
    sc_signal< sc_logic > a_RVALID;
    sc_signal< sc_logic > a_RREADY;
    sc_signal< sc_lv<32> > a_RDATA;
    sc_signal< sc_logic > a_RLAST;
    sc_signal< sc_lv<1> > a_RID;
    sc_signal< sc_lv<1> > a_RUSER;
    sc_signal< sc_lv<2> > a_RRESP;
    sc_signal< sc_logic > a_BVALID;
    sc_signal< sc_lv<2> > a_BRESP;
    sc_signal< sc_lv<1> > a_BID;
    sc_signal< sc_lv<1> > a_BUSER;
    sc_signal< sc_logic > b_AWREADY;
    sc_signal< sc_logic > b_WREADY;
    sc_signal< sc_logic > b_ARVALID;
    sc_signal< sc_logic > b_ARREADY;
    sc_signal< sc_logic > b_RVALID;
    sc_signal< sc_logic > b_RREADY;
    sc_signal< sc_lv<32> > b_RDATA;
    sc_signal< sc_logic > b_RLAST;
    sc_signal< sc_lv<1> > b_RID;
    sc_signal< sc_lv<1> > b_RUSER;
    sc_signal< sc_lv<2> > b_RRESP;
    sc_signal< sc_logic > b_BVALID;
    sc_signal< sc_lv<2> > b_BRESP;
    sc_signal< sc_lv<1> > b_BID;
    sc_signal< sc_lv<1> > b_BUSER;
    sc_signal< sc_logic > c_AWVALID;
    sc_signal< sc_logic > c_AWREADY;
    sc_signal< sc_logic > c_WVALID;
    sc_signal< sc_logic > c_WREADY;
    sc_signal< sc_logic > c_ARREADY;
    sc_signal< sc_logic > c_RVALID;
    sc_signal< sc_lv<32> > c_RDATA;
    sc_signal< sc_logic > c_RLAST;
    sc_signal< sc_lv<1> > c_RID;
    sc_signal< sc_lv<1> > c_RUSER;
    sc_signal< sc_lv<2> > c_RRESP;
    sc_signal< sc_logic > c_BVALID;
    sc_signal< sc_logic > c_BREADY;
    sc_signal< sc_lv<2> > c_BRESP;
    sc_signal< sc_lv<1> > c_BID;
    sc_signal< sc_lv<1> > c_BUSER;
    sc_signal< sc_lv<32> > result_reg_315;
    sc_signal< sc_lv<32> > k_reg_328;
    sc_signal< sc_lv<32> > grp_fu_372_p2;
    sc_signal< sc_lv<32> > matrix_size_reg_799;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_sig_ioackin_a_ARREADY;
    sc_signal< sc_lv<32> > c_addr_reg_815;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > b_addr_reg_820;
    sc_signal< sc_lv<32> > tmp_fu_439_p2;
    sc_signal< sc_lv<32> > tmp_reg_826;
    sc_signal< sc_lv<16> > bufa_addr_reg_833;
    sc_signal< bool > ap_block_state10;
    sc_signal< sc_logic > ap_sig_ioackin_b_ARREADY;
    sc_signal< bool > ap_block_state10_io;
    sc_signal< sc_lv<31> > i_1_fu_484_p2;
    sc_signal< sc_lv<31> > i_1_reg_841;
    sc_signal< sc_lv<32> > tmpData_a_reg_846;
    sc_signal< sc_lv<17> > y_1_fu_507_p3;
    sc_signal< sc_lv<17> > y_1_reg_851;
    sc_signal< sc_lv<17> > x_1_fu_515_p3;
    sc_signal< sc_lv<17> > x_1_reg_856;
    sc_signal< sc_lv<16> > bufb_addr_reg_861;
    sc_signal< bool > ap_block_state18;
    sc_signal< sc_lv<31> > i_2_fu_563_p2;
    sc_signal< sc_lv<31> > i_2_reg_869;
    sc_signal< sc_lv<32> > tmpData_b_reg_874;
    sc_signal< sc_lv<17> > y_4_fu_586_p3;
    sc_signal< sc_lv<17> > y_4_reg_879;
    sc_signal< sc_lv<17> > x_4_fu_594_p3;
    sc_signal< sc_lv<17> > x_4_reg_884;
    sc_signal< sc_lv<18> > tmp_24_cast_fu_610_p3;
    sc_signal< sc_lv<18> > tmp_24_cast_reg_889;
    sc_signal< sc_logic > ap_sig_ioackin_c_AWREADY;
    sc_signal< bool > ap_block_state20_io;
    sc_signal< sc_lv<31> > row_1_fu_623_p2;
    sc_signal< sc_lv<31> > row_1_reg_898;
    sc_signal< sc_lv<18> > col_cast_cast_fu_633_p1;
    sc_signal< sc_lv<18> > col_cast_cast_reg_903;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<16> > bufc_addr_1_reg_908;
    sc_signal< sc_lv<1> > exitcond1_fu_647_p2;
    sc_signal< sc_lv<17> > col_1_fu_652_p2;
    sc_signal< sc_lv<17> > col_1_reg_917;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_fu_694_p2;
    sc_signal< sc_lv<1> > exitcond_reg_932;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond_reg_932;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_exitcond_reg_932;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_exitcond_reg_932;
    sc_signal< sc_lv<32> > k_1_fu_699_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > bufa_q0;
    sc_signal< sc_lv<32> > bufa_load_reg_941;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > bufb_q0;
    sc_signal< sc_lv<32> > bufb_load_reg_946;
    sc_signal< sc_lv<32> > grp_fu_705_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_951;
    sc_signal< sc_lv<32> > result_1_fu_709_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<31> > i_3_fu_750_p2;
    sc_signal< sc_lv<31> > i_3_reg_969;
    sc_signal< sc_lv<32> > m_1_fu_773_p3;
    sc_signal< sc_lv<32> > m_1_reg_974;
    sc_signal< sc_lv<1> > tmp_3_fu_745_p2;
    sc_signal< sc_lv<32> > n_1_fu_781_p3;
    sc_signal< sc_lv<32> > n_1_reg_979;
    sc_signal< sc_lv<32> > bufc_q0;
    sc_signal< sc_lv<32> > tmpData_c_reg_984;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<16> > bufa_address0;
    sc_signal< sc_logic > bufa_ce0;
    sc_signal< sc_logic > bufa_we0;
    sc_signal< sc_lv<16> > bufb_address0;
    sc_signal< sc_logic > bufb_ce0;
    sc_signal< sc_logic > bufb_we0;
    sc_signal< sc_lv<16> > bufc_address0;
    sc_signal< sc_logic > bufc_ce0;
    sc_signal< sc_logic > bufc_we0;
    sc_signal< sc_lv<31> > i_reg_227;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<17> > y_reg_238;
    sc_signal< sc_lv<17> > x_reg_249;
    sc_signal< sc_lv<17> > y3_reg_260;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<17> > x2_reg_271;
    sc_signal< sc_lv<31> > i1_reg_282;
    sc_signal< sc_lv<31> > row_reg_293;
    sc_signal< sc_lv<17> > col_reg_304;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_lv<32> > m_reg_339;
    sc_signal< sc_logic > ap_sig_ioackin_c_WREADY;
    sc_signal< sc_lv<32> > n_reg_350;
    sc_signal< sc_lv<31> > i4_reg_361;
    sc_signal< sc_lv<32> > tmp_19_cast_fu_474_p1;
    sc_signal< sc_lv<32> > tmp_22_cast_fu_549_p1;
    sc_signal< sc_lv<32> > tmp_25_cast_fu_642_p1;
    sc_signal< sc_lv<32> > tmp_29_cast_fu_667_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > tmp_32_cast_fu_689_p1;
    sc_signal< sc_lv<32> > tmp_28_cast_fu_736_p1;
    sc_signal< sc_lv<32> > tmp_16_fu_388_p1;
    sc_signal< sc_lv<32> > tmp_14_fu_409_p1;
    sc_signal< sc_lv<32> > tmp_15_fu_429_p1;
    sc_signal< sc_logic > ap_reg_ioackin_a_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_b_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_c_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_c_WREADY;
    sc_signal< sc_lv<30> > a_offset1_fu_378_p4;
    sc_signal< sc_lv<30> > c_offset5_fu_399_p4;
    sc_signal< sc_lv<30> > b_offset3_fu_419_p4;
    sc_signal< sc_lv<32> > tmp_fu_439_p0;
    sc_signal< sc_lv<10> > tmp_17_fu_456_p1;
    sc_signal< sc_lv<18> > tmp_18_cast_fu_460_p3;
    sc_signal< sc_lv<18> > y_cast_cast_fu_452_p1;
    sc_signal< sc_lv<18> > tmp_18_fu_468_p2;
    sc_signal< sc_lv<32> > i_cast_fu_444_p1;
    sc_signal< sc_lv<32> > y_cast_fu_448_p1;
    sc_signal< sc_lv<1> > tmp_2_fu_490_p2;
    sc_signal< sc_lv<17> > y_2_fu_501_p2;
    sc_signal< sc_lv<17> > x_2_fu_495_p2;
    sc_signal< sc_lv<10> > tmp_19_fu_531_p1;
    sc_signal< sc_lv<18> > tmp_21_cast_fu_535_p3;
    sc_signal< sc_lv<18> > y3_cast_cast_fu_527_p1;
    sc_signal< sc_lv<18> > tmp_20_fu_543_p2;
    sc_signal< sc_lv<32> > i1_cast_fu_554_p1;
    sc_signal< sc_lv<32> > y3_cast_fu_523_p1;
    sc_signal< sc_lv<1> > tmp_7_fu_569_p2;
    sc_signal< sc_lv<17> > y_3_fu_580_p2;
    sc_signal< sc_lv<17> > x_3_fu_574_p2;
    sc_signal< sc_lv<10> > tmp_21_fu_606_p1;
    sc_signal< sc_lv<32> > row_cast_fu_602_p1;
    sc_signal< sc_lv<32> > tmp_s_fu_618_p1;
    sc_signal< sc_lv<18> > tmp_22_fu_637_p2;
    sc_signal< sc_lv<32> > col_cast_fu_629_p1;
    sc_signal< sc_lv<32> > exitcond1_fu_647_p1;
    sc_signal< sc_lv<18> > tmp_26_fu_658_p1;
    sc_signal< sc_lv<18> > tmp_27_fu_662_p2;
    sc_signal< sc_lv<10> > tmp_28_fu_672_p1;
    sc_signal< sc_lv<18> > tmp_31_cast_fu_676_p3;
    sc_signal< sc_lv<18> > tmp_29_fu_684_p2;
    sc_signal< sc_lv<32> > exitcond_fu_694_p1;
    sc_signal< sc_lv<10> > tmp_24_fu_718_p1;
    sc_signal< sc_lv<18> > tmp_23_fu_714_p1;
    sc_signal< sc_lv<18> > tmp_27_cast_fu_722_p3;
    sc_signal< sc_lv<18> > tmp_25_fu_730_p2;
    sc_signal< sc_lv<32> > i4_cast_fu_741_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_756_p2;
    sc_signal< sc_lv<32> > m_2_fu_761_p2;
    sc_signal< sc_lv<32> > n_2_fu_767_p2;
    sc_signal< sc_lv<30> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_1184;
    sc_signal< bool > ap_condition_514;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<30> ap_ST_fsm_state1;
    static const sc_lv<30> ap_ST_fsm_state2;
    static const sc_lv<30> ap_ST_fsm_state3;
    static const sc_lv<30> ap_ST_fsm_state4;
    static const sc_lv<30> ap_ST_fsm_state5;
    static const sc_lv<30> ap_ST_fsm_state6;
    static const sc_lv<30> ap_ST_fsm_state7;
    static const sc_lv<30> ap_ST_fsm_state8;
    static const sc_lv<30> ap_ST_fsm_state9;
    static const sc_lv<30> ap_ST_fsm_state10;
    static const sc_lv<30> ap_ST_fsm_state11;
    static const sc_lv<30> ap_ST_fsm_state12;
    static const sc_lv<30> ap_ST_fsm_state13;
    static const sc_lv<30> ap_ST_fsm_state14;
    static const sc_lv<30> ap_ST_fsm_state15;
    static const sc_lv<30> ap_ST_fsm_state16;
    static const sc_lv<30> ap_ST_fsm_state17;
    static const sc_lv<30> ap_ST_fsm_state18;
    static const sc_lv<30> ap_ST_fsm_state19;
    static const sc_lv<30> ap_ST_fsm_state20;
    static const sc_lv<30> ap_ST_fsm_state21;
    static const sc_lv<30> ap_ST_fsm_pp0_stage0;
    static const sc_lv<30> ap_ST_fsm_state27;
    static const sc_lv<30> ap_ST_fsm_state28;
    static const sc_lv<30> ap_ST_fsm_state29;
    static const sc_lv<30> ap_ST_fsm_state30;
    static const sc_lv<30> ap_ST_fsm_state31;
    static const sc_lv<30> ap_ST_fsm_state32;
    static const sc_lv<30> ap_ST_fsm_state33;
    static const sc_lv<30> ap_ST_fsm_state34;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1D;
    static const int C_M_AXI_A_USER_VALUE;
    static const int C_M_AXI_A_PROT_VALUE;
    static const int C_M_AXI_A_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_B_USER_VALUE;
    static const int C_M_AXI_B_PROT_VALUE;
    static const int C_M_AXI_B_CACHE_VALUE;
    static const int C_M_AXI_C_USER_VALUE;
    static const int C_M_AXI_C_PROT_VALUE;
    static const int C_M_AXI_C_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<17> ap_const_lv17_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const7();
    void thread_ap_clk_no_reset_();
    void thread_a_ARVALID();
    void thread_a_RREADY();
    void thread_a_blk_n_AR();
    void thread_a_blk_n_R();
    void thread_a_offset1_fu_378_p4();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10();
    void thread_ap_block_state10_io();
    void thread_ap_block_state18();
    void thread_ap_block_state20_io();
    void thread_ap_block_state22_pp0_stage0_iter0();
    void thread_ap_block_state23_pp0_stage0_iter1();
    void thread_ap_block_state24_pp0_stage0_iter2();
    void thread_ap_block_state25_pp0_stage0_iter3();
    void thread_ap_block_state26_pp0_stage0_iter4();
    void thread_ap_condition_1184();
    void thread_ap_condition_514();
    void thread_ap_condition_pp0_exit_iter0_state22();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_a_ARREADY();
    void thread_ap_sig_ioackin_b_ARREADY();
    void thread_ap_sig_ioackin_c_AWREADY();
    void thread_ap_sig_ioackin_c_WREADY();
    void thread_b_ARVALID();
    void thread_b_RREADY();
    void thread_b_blk_n_AR();
    void thread_b_blk_n_R();
    void thread_b_offset3_fu_419_p4();
    void thread_bufa_address0();
    void thread_bufa_ce0();
    void thread_bufa_we0();
    void thread_bufb_address0();
    void thread_bufb_ce0();
    void thread_bufb_we0();
    void thread_bufc_address0();
    void thread_bufc_ce0();
    void thread_bufc_we0();
    void thread_c_AWVALID();
    void thread_c_BREADY();
    void thread_c_WVALID();
    void thread_c_blk_n_AW();
    void thread_c_blk_n_B();
    void thread_c_blk_n_W();
    void thread_c_offset5_fu_399_p4();
    void thread_col_1_fu_652_p2();
    void thread_col_cast_cast_fu_633_p1();
    void thread_col_cast_fu_629_p1();
    void thread_exitcond1_fu_647_p1();
    void thread_exitcond1_fu_647_p2();
    void thread_exitcond_fu_694_p1();
    void thread_exitcond_fu_694_p2();
    void thread_i1_cast_fu_554_p1();
    void thread_i4_cast_fu_741_p1();
    void thread_i_1_fu_484_p2();
    void thread_i_2_fu_563_p2();
    void thread_i_3_fu_750_p2();
    void thread_i_cast_fu_444_p1();
    void thread_k_1_fu_699_p2();
    void thread_m_1_fu_773_p3();
    void thread_m_2_fu_761_p2();
    void thread_n_1_fu_781_p3();
    void thread_n_2_fu_767_p2();
    void thread_result_1_fu_709_p2();
    void thread_row_1_fu_623_p2();
    void thread_row_cast_fu_602_p1();
    void thread_tmp_14_fu_409_p1();
    void thread_tmp_15_fu_429_p1();
    void thread_tmp_16_fu_388_p1();
    void thread_tmp_17_fu_456_p1();
    void thread_tmp_18_cast_fu_460_p3();
    void thread_tmp_18_fu_468_p2();
    void thread_tmp_19_cast_fu_474_p1();
    void thread_tmp_19_fu_531_p1();
    void thread_tmp_1_fu_479_p2();
    void thread_tmp_20_fu_543_p2();
    void thread_tmp_21_cast_fu_535_p3();
    void thread_tmp_21_fu_606_p1();
    void thread_tmp_22_cast_fu_549_p1();
    void thread_tmp_22_fu_637_p2();
    void thread_tmp_23_fu_714_p1();
    void thread_tmp_24_cast_fu_610_p3();
    void thread_tmp_24_fu_718_p1();
    void thread_tmp_25_cast_fu_642_p1();
    void thread_tmp_25_fu_730_p2();
    void thread_tmp_26_fu_658_p1();
    void thread_tmp_27_cast_fu_722_p3();
    void thread_tmp_27_fu_662_p2();
    void thread_tmp_28_cast_fu_736_p1();
    void thread_tmp_28_fu_672_p1();
    void thread_tmp_29_cast_fu_667_p1();
    void thread_tmp_29_fu_684_p2();
    void thread_tmp_2_fu_490_p2();
    void thread_tmp_31_cast_fu_676_p3();
    void thread_tmp_32_cast_fu_689_p1();
    void thread_tmp_3_fu_745_p2();
    void thread_tmp_4_fu_756_p2();
    void thread_tmp_6_fu_558_p2();
    void thread_tmp_7_fu_569_p2();
    void thread_tmp_fu_439_p0();
    void thread_tmp_fu_439_p2();
    void thread_tmp_s_fu_618_p1();
    void thread_tmp_s_fu_618_p2();
    void thread_x_1_fu_515_p3();
    void thread_x_2_fu_495_p2();
    void thread_x_3_fu_574_p2();
    void thread_x_4_fu_594_p3();
    void thread_y3_cast_cast_fu_527_p1();
    void thread_y3_cast_fu_523_p1();
    void thread_y_1_fu_507_p3();
    void thread_y_2_fu_501_p2();
    void thread_y_3_fu_580_p2();
    void thread_y_4_fu_586_p3();
    void thread_y_cast_cast_fu_452_p1();
    void thread_y_cast_fu_448_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
